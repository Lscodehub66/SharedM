// let LoadCode = Load("QRC_IncomeAll","Code"), EVA = Expression.Evaluate(LoadCode ,#shared) in EVA
let
_numtext = "20",
  //**
    Source = Table.Buffer(fx("Ws")("台账24")),
    Sheetlist = Table.SelectRows(Source, each Text.StartsWith([Item], "项目收入情况") and Text.Contains([Item], _numtext )),
    #"Split Column by Character Transition" = Table.SplitColumn(
        Sheetlist,
        "Item",
        Splitter.SplitTextByCharacterTransition((c) => not List.Contains({"0".."9"}, c), {"0".."9"}),
        {"Item.1", "Item.2"}
    ),
    #"Added Custom" = Table.AddColumn(
        #"Split Column by Character Transition", "Custom", each fx("QRCIncome_HD")([Data]), type table
    ),
    #"Added Custom0" = Table.AddColumn(
        #"Added Custom",
        "Filtered",
        each
            fx(
                "RemoveBlankColumns"
            )(
                Table.SelectRows(
                    [Custom], (Magic) => not List.Contains({null, "", "--"}, Record.Field(Magic, "ISIN"))
                )
            ),
        type table
    ),
    #"Added Custom1" = Table.AddColumn(
        #"Added Custom0", "HD", each List.Buffer(Table.ColumnNames([Filtered])), type list
    ),
    #">>IntersectedHD" = List.Intersect(#"Added Custom1"[HD]),
    #">>ExpHD" = List.Buffer(List.Sort(List.Distinct(List.Union(#"Added Custom1"[HD])), Order.Ascending)),
    #"Added Custom2" = Table.AddColumn(
        #"Added Custom1", "HD.Only", each List.RemoveItems([HD], #">>IntersectedHD"), type list
    ),
    #">>CCYHD" = List.Select(#">>ExpHD", each Text.EndsWith(_, "币种")),
    #"Sorted Rows" = Table.Sort(#"Added Custom2", {{"Item.2", Order.Descending}}),
    #"Removed Columns" = Table.Buffer(Table.SelectColumns(#"Sorted Rows", {"Filtered"})),
    Expanded = Table.ExpandTableColumn(#"Removed Columns", "Filtered", #">>ExpHD"),
    #">>>>>>>>Filtered 0 fee" = Table.SelectRows(Expanded, each ([承销费.USD] = 0) and [项目状态] <> "5.不适用"),
    #"Removed Columns2" = fx("Data")(Table.RemoveColumns(Expanded, {"费用Due Date", "费用overdue"}, MissingField.Ignore)),
    #"Combined CCY" = Table.TransformColumns(
        Table.CombineColumns(
            #"Removed Columns2", #">>CCYHD", Combiner.CombineTextByDelimiter(";", QuoteStyle.None), "币种"
        ),
        {
            {"币种", each Text.Replace(Text.Select(_, {"A".."Z"}), "RMB", "CNH"), type text},
            {
                "Project Name",
                each if Text.Contains(_, "Project") then Text.AfterDelimiter(_, "Project ") else _,
                type text
            }
        }
    ),
    #"Replaced Value" = Table.ReplaceValue(
        #"Combined CCY",
        0,
        each if not List.Contains({null, 0}, [融资规模.USD]) then null else 0,
        Replacer.ReplaceValue,
        {"融资规模.其他"}
    ),
    其他Replaced币种 = Table.ReplaceValue(
        #"Replaced Value",
        "",
        each
            if [融资规模.其他] = null then
                "USD"
            else if List.ContainsAll({"A".."Z", "+", " "}, Text.ToList([融资规模.其他]), Comparer.OrdinalIgnoreCase) then
                [融资规模.其他]
            else
                "",
        Replacer.ReplaceValue,
        {"币种"}
    ),
    其他2Replaced其他 = Table.ReplaceValue(
        其他Replaced币种,
        each [融资规模.其他],
        each if [融资规模.其他2] <> null then [融资规模.其他2] else [融资规模.其他],
        Replacer.ReplaceValue,
        {"融资规模.其他"}
    ),
    #"Changed Type" = List.Accumulate( {"融资规模.USD", "融资规模.其他", "融资规模.其他2" , "承销费.USD" ,  "承销费.其他"  }, 其他2Replaced其他, (x,y)=> try Table.TransformColumnTypes(x, {{y, Int64.Type}}
       
    ) otherwise x),
    #"Replaced Errors" = Table.ReplaceErrorValues(#"Changed Type", {{"融资规模.其他", null}}),
    #"Inserted Division" = Table.AddColumn(
        #"Replaced Errors",
        "QRC汇率因子",
        each
            if [币种] = "USD" then
                1
            else if not List.Contains({null, 0}, [融资规模.USD]) and not List.Contains({null, 0}, [融资规模.其他]) then
                [融资规模.USD] / [融资规模.其他]
            else
                null,
        type number
    ),
    #"Added Fee" = Table.AddColumn(
        #"Inserted Division",
        "承销费.原币",
        each
            if [币种] <> "USD" and [承销费.其他] = null and [承销费.USD] <> null then
                [QRC汇率因子] * [承销费.USD]
            else if [承销费.其他] = null then
                [承销费.USD]
            else
                [承销费.其他],
        type number
    ),
    #"Inserted Multiplication" = Table.AddColumn(#"Added Fee", "承销费.美元", each [承销费.原币] * [QRC汇率因子], type number),
    #"Added Custom3" = Table.AddColumn(
        #"Inserted Multiplication", "IS_JGC", each if [担任角色] = "JGC" then "JGC" else "NON-JGC", type text
    ),
    Custom2 = fx("PRJSync")(#"Added Custom3", "序号", "项目定价日", "PRJ对账号"),
    #"Added Conditional Column" = Table.AddColumn(
        Custom2, "IS_BnD", each if Text.Contains([#"B&D/LeftLead"], "B&D") then [#"B&D/LeftLead"] else "", type text
    ),
    #"Added Conditional Column1" = Table.AddColumn(
        #"Added Conditional Column",
        "IS_LEAD",
        each if Text.Contains([#"B&D/LeftLead"], "Lead") then "Left-lead" else "",
        type text
    ),
    #"Sorted Rows1" = Table.Sort(#"Added Conditional Column1", {{"PRJ对账号", Order.Ascending}}),
    #"Added Index" = Table.AddIndexColumn(#"Sorted Rows1", "Index", 1, 1, Int64.Type),
    Sorted = fx("PresentNoData")(Table.Sort(#"Added Index", {{"PRJ对账号", Order.Descending}})),
    SCol = Table.SelectColumns(
        Sorted,
        {
            "Index",
            "项目定价日",
            "ISIN",
            "Project Name",
            "项目名称(集团全称)",
            "团队",
            "IS_JGC",
            "IS_BnD",
            "IS_LEAD",
            "新规角色",
            "币种",
            "承销费.原币",
            "承销费.美元",
            "QRC汇率因子",
            "项目状态",
            "序号",
            "PRJ对账号"
        },
        MissingField.Ignore
    )
   
in
SCol