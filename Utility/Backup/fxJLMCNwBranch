(TextName as text) =>
    let
        fxClean = (InputText as text, FinderList as list, ReplacerList as list) =>
            let
                // Bulk replace
                ReplacerTable = Table.Buffer(Table.FromColumns({FinderList, ReplacerList}, {"Find", "Replace"})),
                FindReplaceList = Table.ToRows(ReplacerTable),
                Counter = Table.RowCount(ReplacerTable),
                BulkReplaceValues = (TextToReplaceTemp, n) =>
                    let
                        ReplacedText = Text.Replace(
                            TextToReplaceTemp,
                            if FindReplaceList{n}{0} = null then
                                ""
                            else
                                FindReplaceList{n}{0},
                            if FindReplaceList{n}{1} = null then
                                ""
                            else
                                FindReplaceList{n}{1}
                        )
                    in
                        if n = Counter - 1 then
                            ReplacedText
                        else
                            @BulkReplaceValues(ReplacedText, n + 1),
                Output = BulkReplaceValues((InputText ?? ""), 0)
            in
                Output,
        TrimJLM_Find = {
            "BANKOFCOMMUNICATIONSINTERNATIONAL",
            "CHINAINVESTMENTSECURITIES",
            "CHINAEVERBRIGHTBANK",
            "CHINASECURITIES",
            "CHINAINTERNATIONALCAPITAL",
            "ASIAPACIFIC",
            "BANKING",
            "CAPITALMARKETS",
            "GLOBALMARKETS",
            "PTE",
            "ASSETMANAGEMENT",
            "INTERNATIONAL",
            "SECURITIES",
            "CAPITAL",
            "LIMITED",
            "COLTD",
            "COMPANY",
            "CORPORATION",
            "CORP",
            "HOLDINGS",
            "HOLDING",
            "LLC",
            "PLC",
            "/THE",
            "FINANCIAL",
            "AUSTRALIANEWZEALANDBANK",
            "MERRILL",
            "INDUSTRIALANDCOMMERCIAL",
            "NATIONALAUSTRALIABANK",
            "OVERSEACHINESEBANK",
            "UNITEDOVERSEAS",
            "HAITONGBANK",
            "CHINACITICBANK",
            "MITSUBISHIUFJ",
            "HONGKONGANDSHANGHAI",
            "HONGKONGSHANGHAI",
            "PINGANOFCSC",
            "BANKOFEASTASIA"
        },
        TrimJLM_Replace = {
            "BOCOMINTERNATIONAL",
            "CNINVSE",
            "CHINAEVERBRIGHTBK",
            "CSCI",
            "CICC",
            "ASIA",
            "BANK",
            "",
            "",
            "",
            "AM",
            "INTL",
            "SEC",
            "CAP",
            "LTD",
            "LTD",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "ANZ",
            "BOFA",
            "INDUSTRIALCOMM",
            "NAB",
            "OCBC",
            "UOB",
            "HTBANK",
            "CNCBI",
            "MUFG",
            "HSBC",
            "HSBC",
            "CHINAPASEC",
            "BEA"
        },
        承销商_Find = List.Buffer(
            {
                "CEBINTL",
                "SHENWANHONGYUAN",
                "BOCOM",
                "CNCB",
                "ABC",
                "SHANXI",
                "CHINAMERCHANTS",
                "TF",
                "DONGXING",
                "FOUNDER",
                "CMBINTL",
                "LUSO",
                "CHIYUBANK",
                "CCBINTL",
                "ZHESHANGBANK",
                "ICBCINTL",
                "CHINAEVERBRIGHTBK",
                "CICC",
                "CSCI",
                "EVERBRIGHTSEC",
                "SOUTHWEST",
                "MINSHENGBANK",
                "INDUSTRIALBANK",
                "ORIENT",
                "HUATAI",
                "ZHONGTAI",
                "HUAXIA",
                "PUDONG",
                "GUOSEN",
                "WINGLUNG",
                "ICBCASIA",
                "BOCHONGKONG",
                "GUANGFABANK",
                "CHINADEVELOPMENTBANK",
                "CHONGHING",
                "BEA",
                "AGRICULTURALBANK",
                "AGRICULTURALBOC",
                "MERCHANTSBANK",
                "INDUSTRIALCOMM",
                "CITICBANK",
                "CONSTRUCTIONBANK",
                "COMMUNICATIONS",
                "BANKOFCHINA",
                "DBS",
                "ICBCMACAU",
                "AGRICOLE",
                "AMTD",
                "ANZ",
                "BARCLAYS",
                "BBVA",
                "BNP",
                "BOCI",
                "BOFA",
                "BOSC",
                "CAITONG",
                "CATHAYUNITED",
                "CENTRALCHINA",
                "CENTRALWEALTH",
                "CHAOSHANG",
                "CHINAGALAXY",
                "CHINAINDUSTRIAL",
                "CIMB",
                "CINDA",
                "CITIGROUP",
                "CLSA",
                "CMBC",
                "COMMERZ",
                "COMMONWEALTH",
                "CREDITSUISSE",
                "CRIC",
                "CTBCBANK",
                "DEUTSCHE",
                "DONGHAI",
                "DZBANK",
                "EMIRATESNBD",
                "ESSENCE",
                "FOSUN",
                "GFSEC",
                "GLORYSUN",
                "GOLDMANSACHS",
                "GUOLIAN",
                "GUOTA",
                "GUOYUAN",
                "HAITONG",
                "HONGKONGSHANGHAI",
                "HSBC",
                "HTBANK",
                "HUAJIN",
                "HUARONG",
                "ICBCEUR",
                "ICBCLONDON",
                "ICBCSINGAPORE",
                "ICBCSTANDARDBANK",
                "INGBANK",
                "INGCAP",
                "INGGROEP",
                "JIANGHAI",
                "JPM",
                "KGI",
                "MACAUCHINESEBANK",
                "MACQUARIE",
                "MAYBANK",
                "MIZUHO",
                "MORGANSTANLEY",
                "MUFG",
                "NAB",
                "NANYANG",
                "NATIXIS",
                "NOMURA",
                "OCBC",
                "PASEC",
                "SANTANDER",
                "SCOTIA",
                "SILKROAD",
                "SMBC",
                "SOCIETE",
                "SOOCHOW",
                "SPDB",
                "STANDARDCHARTERED",
                "TENSANT",
                "UBS",
                "UOB",
                "VERED",
                "WANHAI",
                "WELLSFARGO",
                "WESTPAC",
                "YUEXIU",
                "ZHESHANGINTL",
                "SUNRIVER",
                "WILSON",
                "CHINACREDIT",
                "HUNGSING",
                "HUAAN",
                "SINOLINK",
                "DINGXIN",
                "CHINAENTERPRISE",
                "SIGMACAP",
                "FAREASTERNINTLBANK",
                "SDHG",
                "CSFG",
                "CHINASHANDONG",
                "DAIWA",
                "CARNEGIE",
                "GOLDBRIDGE",
                "DL",
                "WANLUNG",
                "HUAFU",
                "PULSAR",
                "OCIAM",
                "EASTASIACAP",
                "MINMETALS",
                "ALPHA",
                "CHENGTONG",
                "SHENGYUAN",
                "VISION",
                "YONXI",
                "FUTEC",
                "HEUNGKONG",
                "SDG",
                "ADMIRALTYHARBOUR",
                "JQ",
                "VALUABLE",
                "HARMONIA",
                "POTOMAC",
                "SEAZEN",
                "TAIFUNG",
                "CNINVSE",
                "YUANYIN",
                "VTB"
            }
        ),
        #"承销商_Replace^" = List.Transform(承销商_Find, each "^" & _ & "^"),
        承销商_CNShort = {
            "农银国际",
            "东方汇理",
            "农行",
            "农行",
            "尚乘",
            "澳新",
            "中银",
            "东亚",
            "巴克莱",
            "西班牙对外银行",
            "法巴",
            "中银香港",
            "中银国际",
            "交银国际",
            "美银",
            "上银国际",
            "财通",
            "国泰银行",
            "建银国际",
            "光银国际",
            "光银",
            "中州国际",
            "中达",
            "潮商",
            "国开行",
            "银河",
            "兴证国际",
            "招证",
            "集友",
            "创兴",
            "中金",
            "联昌银行",
            "信达国际",
            "信银国际",
            "花旗",
            "中信里昂",
            "民银资本",
            "招银国际",
            "信银资本",
            "德国商业银行",
            "澳洲联邦银行",
            "交行",
            "建行",
            "瑞信",
            "克而瑞",
            "中信建投国际",
            "中国信托",
            "星展",
            "德银",
            "东海",
            "东兴",
            "德国中央合作银行",
            "迪拜国民银行",
            "安信",
            "光证",
            "复星恒利",
            "广发",
            "宝新",
            "高盛",
            "广发银行",
            "国联",
            "国信",
            "国君国际",
            "国元",
            "海通国际",
            "汇丰",
            "汇丰",
            "海通银行",
            "华金",
            "华融",
            "华泰",
            "华夏银行",
            "工银亚洲",
            "工银欧洲",
            "工银国际",
            "工银伦分",
            "工银澳分",
            "工银新分",
            "工银标准",
            "兴业",
            "工行",
            "荷兰国际",
            "荷兰国际",
            "荷兰国际",
            "江海",
            "摩根大通",
            "凯基",
            "澳门国际银行",
            "澳门华人银行",
            "麦格里",
            "马来亚银行",
            "招行",
            "民银",
            "瑞穗",
            "摩根士丹利",
            "三菱日联",
            "澳洲国民银行",
            "南商银行",
            "法国外贸银行",
            "野村",
            "华侨银行",
            "东方",
            "平证香港",
            "浦银",
            "桑坦德銀行",
            "加拿大丰业银行",
            "山西",
            "申万宏源",
            "丝路国际",
            "日兴",
            "法兴",
            "东吴",
            "西南",
            "浦银国际",
            "渣打",
            "天晟",
            "天风",
            "瑞银",
            "大华银行",
            "中薇金融",
            "万海",
            "富国银行",
            "西太平洋银行",
            "永隆",
            "越秀",
            "浙商",
            "浙商国际金控",
            "中泰",
            "淞港",
            "汇生",
            "中诚国际",
            "鸿昇",
            "华安",
            "国金",
            "鼎鑫",
            "华业",
            "众和",
            "远东国际商业银行",
            "山高",
            "华鲁国际",
            "大和",
            "衡山",
            "金桥",
            "德林",
            "万隆",
            "华福国际",
            "脉搏",
            "东建国际",
            "三谷",
            "五矿证券",
            "亚华",
            "诚通香港资管",
            "盛源",
            "万盛",
            "雍熙",
            "富德",
            "香江",
            "山金",
            "钟港",
            "金信期盈",
            "华盛",
            "山高",
            "仁和",
            "波多马克",
            "新城晋峰",
            "大丰",
            "中投证券",
            "方正",
            "原银证券",
            "VTB"
        },
        Location_Find = {
            "ABUDHABI",
            "ASTANA",
            "DUBAI",
            "FRANKFURT",
            "HONGKONG",
            "HUNGARY",
            "JOHANNESBURG",
            "LONDON",
            "LUXEMBOURG",
            "MACAU",
            "NEWYORK",
            "PARIS",
            "SINGAPORE",
            "SYDNEY",
            "TAIPEI",
            "TOKYO",
            "INDONESIA",
            "AUSTRALIA",
            "SHANGHAI",
            "SYDNEY",
            "SPAIN",
            "QATAR"
        },
        Location_Replace = List.Buffer(
            {
                "AUH",
                "NQZ",
                "DXB",
                "FRA",
                "HK",
                "BUD",
                "JNB",
                "LON",
                "LUX",
                "MFM",
                "JFK",
                "PAR",
                "SG",
                "SYD",
                "TPE",
                "TYO",
                "IND",
                "AUS",
                "PVG",
                "SY",
                "SPN",
                "QTR"
            }
        ),
        #"Location_Replace^" = List.Transform(Location_Replace, each "^" & _ & "^"),
        Location_CN = {
            "阿布达比",
            "阿斯塔纳",
            "迪拜",
            "法兰克福",
            "香港",
            "匈牙利",
            "约翰内斯堡",
            "伦敦",
            "卢森堡",
            "澳门",
            "纽约",
            "巴黎",
            "新加坡",
            "悉尼",
            "台北",
            "东京",
            "印尼",
            "澳大利亚",
            "上海",
            "悉尼",
            "西班牙",
            "卡塔尔"
        },
        Text = Text.Select(Text.Upper(TextName ?? ""), {"A".."Z", "/", ";"}),
        Text0 = List.Accumulate(
            {
                "CREDITAGRICOLECIB",
                "BARCLAYSBANK",
                "BNPPARIBAS",
                "DEUTSCHEBANK",
                "INGBANK",
                "MIZUHOBANK",
                "NATIXIS",
                "STANDARDCHARTERED",
                "WESTPAC"
            },
            Text,
            (x, y) =>
                if Text.Contains((x ?? ""), y) and Text.Contains((x ?? ""), "/") then
                    Text.BeforeDelimiter(x, "/")
                else
                    x
        ),
        Text1 =
            if Text.Contains(Text0, "BRANCH") and not Text.Contains(Text0, "/") then
                fxClean(
                    Text0,
                    {
                        "HONGKONGBRANCH",
                        "LONDONBRANCH",
                        "SINGAPOREBRANCH",
                        "DUBAIDIFCBRANCH",
                        "NEWYORKBRANCH",
                        "MACAUBRANCH",
                        "/THE"
                    },
                    {"/HONGKONG", "/LONDON", "/SINGAPORE", "/DUBAI", "/NEWYORK", "/MACAU", ""}
                )
            else
                Text0,
        BRText2 = Text.AfterDelimiter(Text1, "/"),
        BRText3 = fxClean(BRText2, Location_Find, #"Location_Replace^"),
        BRText4 = Text.BetweenDelimiters(BRText3, "^", "^"),
        BRText5 = fxClean(BRText4, Location_Replace, Location_CN),
        Text2 = Text.BeforeDelimiter(Text1, "/"),
        Text3 = fxClean(Text2, TrimJLM_Find, TrimJLM_Replace),
        Text4 = Text.BeforeDelimiter(Text3, "LTD"),
        Text5 =
            if Text.Contains(Text4, "BANK") and not Text.StartsWith(Text4, "BANK") then
                Text.BeforeDelimiter(Text4, "BANK") & "BANK"
            else
                Text4,
        Text6 = Text.BeforeDelimiter(Text5, "INVEST"),
        Text7 =
            if Text.Contains(Text6, "SEC") and not Text.StartsWith(Text6, "SEC") then
                Text.BeforeDelimiter(Text6, "SEC") & "SEC"
            else
                Text6,
        Text8 = if Text.EndsWith(Text7, "AG") then Text.Replace(Text7, "AG", "") else Text7,
        Text9 = fxClean(Text8, 承销商_Find, #"承销商_Replace^"),
        Text10 = Text.BetweenDelimiters(Text9, "^", "^"),
        Text11 = if Text10 = null then "" else fxClean(Text10, 承销商_Find, 承销商_CNShort),
        Text12 = if BRText5 <> "" then Text11 & "/" & BRText5 else Text11
    in
        Text12
