//SampleTF = Table.TransformColumns(Source, List.Transform(Table.ColumnNames(Source),each {_, each fxCleaner(_,null, {"【", "】"}, {"", ""})})),
//SampleSmartClean = Table.AddColumn(Source, "【】", each fxCleaner([Column],"主体")),
let // let  InputText = "AA+u", FTextInput="评级",FinderList = {null},ReplacerList={null}
    Source = (
        InputText as nullable text,
        optional FTextInput as nullable text,
        optional FinderList as nullable list,
        optional ReplacerList as nullable list
    ) =>
        let
            // Input Transform
            TextName =
                if InputText = null then
                    ""
                else if FTextInput = "主体" and not List.ContainsAny(Text.ToList(InputText), {"A".."Z"}, Comparer.OrdinalIgnoreCase) then
                    Text.Replace(InputText, " ", "")
                else
                    InputText,
          
            // Select Cleaner
    
            FText = if FTextInput = null then "" else Text.Upper(Text.Trim(FTextInput)),
        DimClean = Table.SelectRows(Load("DimClean"), each Text.Contains([Column1],FText)),
        Gettbl =
                if FText = "" then
                    Table.FromColumns({FinderList, ReplacerList}, {"Find", "Replace"})
                else
                    DimClean[Column2]{0},
            // Bulk replace
            ReplacerTable = Table.Buffer(Gettbl),
            FindReplaceList = Table.ToRows(ReplacerTable),
            Counter = Table.RowCount(ReplacerTable),
            BulkReplaceValues = (TextToReplaceTemp, n) =>
                let
                    ReplacedText = Text.Replace(
                        TextToReplaceTemp,
                        if FindReplaceList{n}{0} = null then
                            ""
                        else
                            FindReplaceList{n}{0},
                        if FindReplaceList{n}{1} = null then
                            ""
                        else
                            FindReplaceList{n}{1}
                    )
                in
                    if n = Counter - 1 then
                        ReplacedText
                    else
                        @BulkReplaceValues(ReplacedText, n + 1),
            Output = BulkReplaceValues(TextName, 0)
        in
            Output,
    //metadata-record
    fnType = type function (
        TextName as text,
        optional FTextInput as (
            type nullable text meta [
                Documentation.AllowedValues = {
                    "主体",
                    "地区",
                    "区县",
                    "评级",
                    "价格",
                    "结构",
                    "品种",
                    "周几",
                    "货币",
                    "角色",
                    "投资者",
                    "一二三",
                    "ABC",
                    "LOCATION",
                    "LOCATION^",
                    "LOCATIONCN"
                }
            ]
        ),
        optional FinderList as nullable list,
        optional ReplacerList as nullable list
    ) as list meta [
        Documentation.Name = "fxCleaner1010",
        Documentation.Description = "主体、地区、区县、评级、价格、结构、品种、周几、货币、角色、投资者、一二三、ABC、LOCATION、LOCATION^、LOCATIONCN"
    ]
in
    Value.ReplaceType(Source, fnType)
