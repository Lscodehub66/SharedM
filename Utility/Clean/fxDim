let
    Source = (TextName as text) =>
        let
            //  Parameters
            fxConnect = Load("fxConnect"),
            //
            Source = Table.FromRows(
                {
                    {"QRC_ClientName", "TB_TF_QRC_GroupName", TB_TF_QRC_GroupName},
                    {"DLD_TableName", "TB_TF_DLD_TableName", TB_TF_DLD_TableName},
                    {"QRC_合规台账22", "TB_PQ_QRC_CPL_22", TB_PQ_QRC_CPL_22},
                    {"Connect_合规", "RN__QRC_CPL", RN__QRC_CPL},
                    {"Connect_KYC", "RN__QRC_KYC", RN__QRC_KYC},
                    {"Connect_DMI违约", "RN__DMI_Default", RN__DMI_Default},
                    {"DB_DataFormat", "RN__DM_DataFormat", RN__DM_DataFormat},
                    {"ESG_ReviewType", "ST__ESG_ReviewType", ST__ESG_ReviewType},
                    {"ESG_ReviewParty", "ST__ESG_ReviewParty", ST__ESG_ReviewParty},
                    {"BaseDirectory_Deal", "CN__BaseDirectory_Deal", CN__BaseDirectory_Deal},
                    {"Connect_DMI违约", "HD_S_DMI_Default", HD_S_DMI_Default},
                    {"DMI_Credit", "HD_S_DMI_Credit", HD_S_DMI_Credit},
                    {"DirectoryToFormalities", "HD_E_Directory_ToCF", HD_E_Directory_ToCF},
                    {"DirectoryToTombsWriter", "HD_E_Directory_ToTomb", HD_E_Directory_ToTomb},
                    {"CF", "HD_S_DM_CF", HD_S_DM_CF},
                    {"ToDo", "HD_S_DM_ToDo", HD_S_DM_ToDo},
                    {"FI", "HD_S_DM_FI", HD_S_DM_FI},
                    {"ESG", "HD_S_DM_ESG", HD_S_DM_ESG},
                    {"SBLC", "HD_S_DM_SBLC", HD_S_DM_SBLC},
                    {"DimSum", "HD_S_DM_DimSum", HD_S_DM_DimSum},
                    {"IGLGFV", "HD_S_DM_IGLGFV", HD_S_DM_IGLGFV},
                    {"FTZ", "HD_S_DM_FTZ", HD_S_DM_FTZ},
                    {"Graph_Deal_Weekly", "HD_S_Graph_Deal", HD_S_Graph_Deal},
                    {"Sync_KYC", "HD_S_KYC_Sync", HD_S_KYC_Sync},
                    {"Sync_Directory", "HD_S_Directory_Sync", HD_S_Directory_Sync},
                    {"MergeRemoval", "HD_R_DB_Merge", HD_R_DB_Merge}
                },
                {"FText", "Name", "Column1"}
            ),
            Dimtbl_Folder = Table.FromRows(
                {
                    {"Root*", "C:\Users\ktkt2\OneDrive", "\\10.10.1.215\dcm$", ""},
                    {"Folder_Base*", "\Business\Hub Drive\DCM Base", "\0 DCM Base", ""},
                    {"Folder_Base_4", null, null, "\4 Markets"},
                    {"Folder_Base_5_RSP", null, null, "\5 Databases\RSP Database"},
                    {"Folder_Team*", "\EXE Team", "\Team Folder\Execution Team", ""},
                    {"Folder_Team_DH", null, null, "\DataHub"},
                    {"Folder_Team_AM", null, null, "\Weekly AM"},
                    {"Folder_Pipeline", "", "\Pipeline Report", ""},
                    {"Folder_QRC", "\EXE Team\QRC", "\【QRC】DCM项目情况表", ""}
                },
                {"Folder", "Folder_Remote", "Folder_Global", "Folder_Segment"}
            ),
            TB_TF_QRC_GroupName = Table.FromRows(
                {
                    {"1022", "中国诚通香港有限公司", "中国诚通控股集团有限公司"},
                    {"1023", "广东交通集团", "广东省交通集团有限公司"},
                    {"1024", "中国水务集团", "中国水务集团有限公司"},
                    {"1025", "衢州市交通投资集团有限公司", "衢州市衢通发展集团有限公司"},
                    {"1026", "河南省铁路建设投资集团", "河南省铁路建设投资集团有限公司"},
                    {"1043", "中航国际租赁有限公司", "中航国际融资租赁有限公司"},
                    {"1055", "长沙先导投资控股有限公司", "长沙先导投资控股集团有限公司"}
                },
                {"CLIENT对账号", "From", "To"}
            ),
            TB_TF_DLD_TableName = Table.FromRows({{"2023/10/06", "BBGcorp", "DLD_BBG_Corp"}}, {"Date", "From", "To"}),
            TB_PQ_QRC_CPL_22 = Table.FromRows(
                Json.Document(
                    Binary.Decompress(
                        Binary.FromText(
                            "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",
                            BinaryEncoding.Base64
                        ),
                        Compression.Deflate
                    )
                ),
                let
                    _t = ((type nullable text) meta [Serialized.Text = true])
                in
                    type table [
                        序号 = _t,
                        团队 = _t,
                        #"Project Name" = _t,
                        #"项目名称（集团全称）" = _t,
                        发行人名称中文 = _t,
                        发行人名称英文 = _t,
                        上会审批日 = _t,
                        Mandate = _t,
                        项目定价日 = _t,
                        #"KYC Deadline" = _t,
                        #"KYC expiry date" = _t,
                        KYC = _t,
                        #"Approved by RO" = _t,
                        Worldcheck = _t,
                        #"DD Form" = _t,
                        #"DD Risk" = _t,
                        #"Record Keeping" = _t,
                        Completed = _t,
                        公盘地址 = _t
                    ]
            ),
            // 【Prefix】Rename_
            RN__DM_DataFormat = {
                {"IN_板块", "板块"},
                {"发行人注册地", "注册成立地"},
                {"FLOATER_FORMULA", "计息基准"},
                {"发行价格", "发行价"},
                {"IN.中资属性", "中资属性"},
                {"发行结构", "发行架构"}
            },
            RN__QRC_CPL = {
                {"Mandate", "Mandated"},
                {"发行人名称英文", "发行人"},
                {"团队", "COVERAGE"},
                {"KYC expiry date", "假设KYC到期日"},
                {"项目名称（集团全称）", "信用主体"}
            },
            RN__QRC_KYC = {{"发行人名称英文*", "发行人"}, {"项目名称（集团全称）", "信用主体"}},
            RN__DMI_Default = {{"ISIN码", "ISIN"}, {"违约日期", "首次违约日"}, {"违约类型", "境外债违约"}, {"企业性质", "公司类型"}},
            // Sort_List
            ST__ESG_ReviewType = {"发行前认证", "第二方意见", "验证"},
            ST__ESG_ReviewParty = {
                "HKQAA",
                "S&P",
                "Sustainable Fitch",
                "Moody's",
                "中诚信绿金科技",
                "Sustainalytics",
                "CECEPEC",
                "EY"
            },
            // Header_List
            HD_S_Directory_Sync = {"PROJECT_NAME", "COVERAGE", "定价日", "交易简称", "Check", "币种规模", "票息", "期限", "ISIN"},
            HD_S_DMI_Default = {"ISIN码", "发行人名称", "违约日期", "违约类型", "地区"},
            HD_S_DMI_Credit = {"信用主体", "债券简称", "穆迪/标普", "公司类型", "行业", "细分行业", "省份", "城市", "区县", "定价日"},
            HD_S_DM_CF = {"序号", "团队", "发行人名称英文", "Mandate", "项目定价日", "KYC", "DD Risk"},
            HD_E_Directory_ToCF = {"ISIN", "PROJECT_NAME", "定价日", "新规角色", "信用主体(备证行)", "注册成立地"},
            HD_E_Directory_ToTomb = {"定价日", "年月", "首次违约日"} & {"备证行", "信用主体简称", "通过分行", "角色"},
            HD_S_DM_ToDo = {
                "PRJ对账号",
                "PROJECT_NAME",
                "定价日",
                "COVERAGE",
                "新规角色",
                "Mandated",
                "主体简称",
                "发行人",
                "注册成立地",
                "KYC expiry date",
                "KYC Status"
            },
            HD_S_DM_FI = {
                "Index",
                "ISIN",
                "定价日",
                "信用主体(备证行)",
                "发行评级",
                "货币",
                "发行规模(亿)",
                "年期",
                "票息",
                "IPG",
                "收窄基点",
                "结构",
                "主题",
                "上市",
                "地区",
                "BOCOM_DEAL?",
                "主体评级",
                "货币细分",
                "信用主体",
                "亿美元",
                "板块二级",
                "板块三级",
                "品种主题",
                "Stats",
                "Check"
            },
            HD_S_DM_ESG = {
                "Index",
                "定价日",
                "信用主体(备证行)",
                "发行评级",
                "发行规模(亿)",
                "货币",
                "年期",
                "票息",
                "上市",
                "ESG主题",
                "BOCOM_DEAL?",
                "亿美元",
                "亿元",
                "板块",
                "外部评审方式",
                "外部评审机构",
                "筹款用途",
                "货币细分",
                "上市分类",
                "交易简称",
                "ISIN"
            },
            HD_S_DM_SBLC = {
                "Index",
                "ISIN",
                "定价日",
                "信用主体简称",
                "备证行",
                "发行评级",
                "货币",
                "发行规模(亿)",
                "年期",
                "票息",
                "IPG",
                "收窄基点",
                "结构",
                "主题",
                "上市",
                "地区",
                "板块",
                "备证分类",
                "备证行标签",
                "BOCOM_DEAL?",
                "主体评级",
                "境内主体评级",
                "货币细分",
                "信用主体",
                "亿美元",
                "年",
                "年月",
                "Check"
            },
            HD_S_DM_DimSum = {
                "Index",
                "ISIN",
                "定价日",
                "信用主体(备证行)",
                "主体评级",
                "发行评级",
                "发行规模(亿)",
                "年期",
                "票息",
                "IPG",
                "收窄基点",
                "结构",
                "主题",
                "清算地",
                "境内主体评级",
                "地区",
                "板块",
                "BOCOM_DEAL?",
                "BISL_ROLE",
                "上市",
                "上市分类",
                "信用主体",
                "评级分类",
                "主体评级分类",
                "付息频率",
                "年月",
                "Check"
            },
            HD_S_DM_IGLGFV = {
                "Index",
                "ISIN",
                "定价日",
                "信用主体(备证行)",
                "主体评级",
                "发行评级",
                "货币",
                "发行规模(亿)",
                "年期",
                "票息",
                "IPG",
                "收窄基点",
                "结构",
                "主题",
                "境内主体评级",
                "地区",
                "级别",
                "BOCOM_DEAL?",
                "BISL_ROLE",
                "上市",
                "信用主体",
                "评级分类",
                "主体评级分类",
                "Check",
                "亿美元",
                "Check"
            },
            HD_S_Graph_Deal = {
                "Index",
                "ISIN",
                "定价日",
                "信用主体(备证行)",
                "发行评级",
                "货币",
                "发行规模(亿)",
                "年期",
                "票息",
                "IPG",
                "收窄基点",
                "结构",
                "主题",
                "板块",
                "地区",
                "BOCOM_DEAL?",
                "亿美元"
            },
            HD_S_DM_FTZ = {
                "Index",
                "ISIN",
                "定价日",
                "信用主体(备证行)",
                "发行评级",
                "货币",
                "发行规模(亿)",
                "年期",
                "票息",
                "IPG",
                "收窄基点",
                "结构",
                "主题",
                "行业",
                "地区",
                "BOCOM_DEAL?",
                "BISL_ROLE",
                "主体评级",
                "境内主体评级",
                "上市",
                "信用主体",
                "亿元",
                "Check"
            },
            HD_R_DB_Merge = {"Timestamp", "Updator", "曾用名", "主体备注", "Index", "公司类型", "上市类型", "系"},
            HD_S_KYC_Sync = {"KYC对账号", "发行人", "KYC Status", "KYC expiry date", "信用主体"},
            //   CN = ColumnNames
            CN__BaseDirectory_Deal = Table.ColumnNames(
                Load("fxConnect")("Directory"){[Item = "tbl_deal", Kind = "Table"]}[Data]
            ),
            // Selection
            Key = Text.Replace(Text.Upper(Text.Trim(TextName)), "_", ""),
            CNSource =
                if Text.Contains(Key, "DIRECTORY") and Text.Contains(Key, "DEAL") then
                    CN__BaseDirectory_Deal
                else
                    {""},
            TableSource =
                if Text.Contains(Key, "QRC") and Text.Contains(Key, "NAME") then
                    TB_TF_QRC_GroupName
                else if Text.Contains(Key, "DLD") and Text.Contains(Key, "NAME") then
                    TB_TF_DLD_TableName
                else if Text.Contains(Key, "合规") and Text.Contains(Key, "22") then
                    TB_PQ_QRC_CPL_22
                else if Text.Contains(Key, "DIM") and Text.Contains(Key, "FOLDER") then
                    Dimtbl_Folder
                else
                    #table({""}, {{""}}),
            RenameSource =
                if Text.Contains(Key, "合规") then
                    RN__QRC_CPL
                else if Text.Contains(Key, "KYC") then
                    RN__QRC_KYC
                else if Text.Contains(Key, "DMI") and (Text.Contains(Key, "违约") or Text.Contains(Key, "DEFAULT")) then
                    RN__DMI_Default
                else if Text.Contains(Key, "DB") or Text.Contains(Key, "DATAFORMAT") then
                    RN__DM_DataFormat
                else
                    {""},
            SortSource =
                if Text.Contains(Key, "REVIEW") and Text.Contains(Key, "TYPE") then
                    ST__ESG_ReviewType
                else if Text.Contains(Key, "REVIEW") and Text.Contains(Key, "PARTY") then
                    ST__ESG_ReviewParty
                else
                    {""},
            HeaderSource =
                if Text.Contains(Key, "DIRECTORY") and Text.Contains(Key, "FORMALITIES") then
                    HD_E_Directory_ToCF
                else if Text.Contains(Key, "DIRECTORY") and Text.Contains(Key, "TOMB") then
                    HD_E_Directory_ToTomb
                else if Text.Contains(Key, "FORMALITIES") then
                    HD_S_DM_CF
                else if Text.Contains(Key, "TODO") then
                    HD_S_DM_ToDo
                else if Text.Contains(Key, "FI") then
                    HD_S_DM_FI
                else if Text.Contains(Key, "ESG") then
                    HD_S_DM_ESG
                else if Text.Contains(Key, "SBLC") then
                    HD_S_DM_SBLC
                else if Text.Contains(Key, "DIMSUM") then
                    HD_S_DM_DimSum
                else if Text.Contains(Key, "IGLGFV") then
                    HD_S_DM_IGLGFV
                else if Text.Contains(Key, "FTZ") then
                    HD_S_DM_IGLGFV
                else if Text.Contains(Key, "GRAPH") and (Text.Contains(Key, "WEEKLY") or Text.Contains(Key, "DEAL")) then
                    HD_S_Graph_Deal
                else if Text.Contains(Key, "MERGE") and Text.Contains(Key, "REMOV") then
                    HD_R_DB_Merge
                else if Text.Contains(Key, "DMI") and Text.Contains(Key, "CREDIT") then
                    HD_S_DMI_Credit
                else if Text.Contains(Key, "DMI") and (Text.Contains(Key, "违约") or Text.Contains(Key, "DEFAULT")) then
                    HD_S_DMI_Default
                else if Text.Contains(Key, "KYC") and Text.Contains(Key, "SYNC") then
                    HD_S_KYC_Sync
                else if Text.Contains(Key, "SYNC") and Text.Contains(Key, "DIRECTORY") then
                    HD_S_Directory_Sync
                else
                    {""},
            Selected =
                if Text.StartsWith(Key, "CN") then
                    CNSource
                else if Text.StartsWith(Key, "RENAME") then
                    RenameSource
                else if Text.StartsWith(Key, "SORT") then
                    SortSource
                else
                    HeaderSource,
            Output =
                if Text.Contains(Key, "TABLE") or Text.Contains(Key, "TBL") then
                    Table.Distinct(TableSource)
                else
                    List.Distinct(Selected)
        in
            Output,
    fnType = type function (
        TextName as (
            type text meta [
                Documentation.AllowedValues = {
                    "DimentionTable_Folder",
                    "TB_TF_QRC_GroupName",
                    "TB_TF_DLD_TableName",
                    "TB_PQ_QRC_CPL_22",
                    "CN__BaseDirectory_Deal",
                    "RN__DM_DataFormat",
                    "RN__QRC_CPL",
                    "RN__QRC_KYC",
                    "ST__ESG_ReviewType",
                    "ST__ESG_ReviewParty",
                    "HD_S_DMI_Credit",
                    "HD_S_Directory_Sync",
                    "HD_S_Graph_Deal",
                    "HD_S_DM_IGLGFV",
                    "HD_S_DM_DimSum",
                    " HD_S_DM_ESG",
                    "HD_S_DM_SBLC",
                    "HD_S_DM_FI",
                    "HD_S_DM_FTZ",
                    "HD_S_DM_ToDo",
                    "HD_S_DM_CF",
                    "HD_S_KYC_Sync",
                    "HD_E_Directory_ToCF",
                    "HD_R_DB_Merge"
                }
            ]
        )
    ) as list meta [
        Documentation.Name = "fxtblNList",
        Documentation.Description = "Transformation Table \ Header Lists \ CWB tables Column Names \ Rename Pairs"
    ]
in
    Value.ReplaceType(Source, fnType)
