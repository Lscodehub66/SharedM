//SampleTF = Table.TransformColumns(Source, List.Transform(Table.ColumnNames(Source),each {_, each fxCleaner(_,null, {"【", "】"}, {"", ""})})),
//SampleSmartClean = Table.AddColumn(Source, "【】", each fxCleaner([Column],"主体")),
let
    Source = (
        InputText as nullable text,
        optional FTextInput as nullable text,
        optional FinderList as nullable list,
        optional ReplacerList as nullable list
    ) =>
        let
            // Input Transform
            TextName =
                if InputText = null then
                    ""
                else if FTextInput = "主体" and not List.ContainsAny(Text.ToList(InputText), {"A".."Z", "+"}, Comparer.OrdinalIgnoreCase)
                then
                    Text.Replace(InputText, " ", "")
                else
                    InputText,
            //
            主体 = {
                {"（香港）", "(香港)"},
                {"（", "("},
                {"）", ")"},
                {"/THE", ""},
                {"\THE", ""},
                {"招商永隆银行有限公司(香港)", "招商永隆银行有限公司"},
                {"EXPORT-IMPORT BANK OF CHINA/THE", "EXPORT-IMPORT BANK OF CHINA"},
                {"香港中央结算(代理人)有限公司", "HKSCC"},
                {"香港中央結算(代理人)有限公司", "HKSCC"},
                {"人民政府国有资产监督管理办公室", "国资委"},
                {"人民政府国有资产监督管理委员会", "国资委"},
                {"国有资产监督管理委员会办公室", "国资委"},
                {"国有资产监督管理委员会", "国资委"},
                {"国有资产监督管理局", "国资局"},
                {"管理委员会", "管委会"},
                {"发展和改革委员会", "发改委"}
            },
            文档符号 = {
                {"🔘", ""},
                {"⭐", ""},
                {"🔆", ""},
                {"📸", ""},
                {"/", "_"},
                {"&ETC.", ""},
                {":", "_"},
                {"(", ""},
                {")", ""},
                {"多选", ""},
                {"🗒️", ""},
                {" ", "_"}
            },
            地区 = {{"维吾尔", ""}, {"壮族", ""}, {"回族", ""}, {"自治区", ""}, {"省", ""}, {"市", ""}, {"特别行政区", ""}},
            区县 = {
                {"（", "("},
                {"）", ")"},
                {"转型综合改革示范区", "综改区"},
                {"中山火炬高技术产业开发区", "火炬开发区"},
                {"武汉东湖新技术开发区", "东湖高新区"},
                {"高新技术开发区", "高新区"},
                {"高新技术产业开发区", "高新区"},
                {"经济技术开发区", "经开区"},
                {"经济开发区", "经开区"},
                {"综合保税", "保税"},
                {"航空港经济综合实验区", "航空港实验区"}
            },
            评级 = {
                {"(P)", ""},
                {"(EXP)", ""},
                {"WD", "--"},
                {"NR", "--"},
                {"WR", "--"},
                {"RD", "--"},
                {"u", ""},
                {"*-", ""},
                {"*", ""},
                {" ", ""},
                {"/-/", "/--/"},
                {"pi", ""},
                {"WR", ""}
            },
            评级分类 = {{"投资级", "IG"}, {"高收益", "HY"}, {"违约", "D"}, {"无评级", "NR"}},
            价格 = {
                {" ", ""},
                {"QUARTLYUS", "3m"},
                {"QUARTLY", "3m"},
                {"LIBOR", "L"},
                {"OVRNTSONION", "SONIA"},
                {"OVRNT", ""},
                {"O/N", ""},
                {"SOFRIX", "SOFR"},
                {"COMPOUNDED", ""},
                {"INDEX", ""},
                {"3M", ""},
                {"BPS", ""},
                {"BP", ""},
                {"区域", ""},
                {"（", "("},
                {"）", ")"},
                {"UST", "T"},
                {"AREA", ""},
                {"COMPOUNDED", ""},
                {"RATE", ""},
                {"MID-SWAP", "MS"},
                {"~", "-"},
                {"EURIBOR", "E"},
                {"(#)", ""},
                {"(THENUMBER)", ""},
                {"CT", "T"},
                {"NFIXF", "BKBM"}
            },
            结构 = {
                {"SBLC+担保+维好协议", "备证+担保+维好"},
                {"维好协议+担保", "维好+担保"},
                {"维好协议+SBLC", "备证+维好"},
                {"直接发行+担保", "直发(红筹)"},
                {"SBLC+担保", "备证+担保"},
                {"直接发行", "直发"},
                {"担保发行", "担保"},
                {"维好协议", "维好"},
                {"SBLC", "备证"}
            },
            品种 = {
                {"Sustainable", "可持续发展"},
                {"Blue", "蓝色"},
                {"Green", "绿色"},
                {"AT1(PrefShare)", "额外一级优先股"},
                {"AT1", "额外一级资本债"},
                {"FTZ", "明珠债"},
                {"T2", "二级资本债"},
                {"MOX", "莲花债"},
                {"Lotus", "莲花债"},
                {"PP", "私募配售"},
                {"LPN", "贷款支持票据"},
                {"JuniorPerp", "次级永续债"},
                {"SnPerp", "高级永续债"},
                {"Social", "社会责任"},
                {"PrefShare", "境外优先股"},
                {"SLB", "可持续发展挂钩"},
                {"FRN", "浮息债"},
                {"DimSum", "点心债"},
                {"Senior", "高级债"},
                {"SBLC", "信用增强债券"},
                {"Yulan", "玉兰"},
                {"Sovereign", "主权债"},
                {"CD", "存款证"},
                {"债点心", "点心"},
                {"--", ""}
            },
            周几 = {
                {"Mon", "周一"},
                {"Tue", "周二"},
                {"Wed", "周三"},
                {"Thu", "周四"},
                {"Fri", "周五"},
                {"Sat", "周六"},
                {"Sun", "周日"}
            },
            货币 = {
                {"MOP", "澳门币"},
                {"AUD", "澳元"},
                {"HKD", "港币"},
                {"USD", "美元"},
                {"EUR", "欧元"},
                {"JPY", "日元"},
                {"SGD", "新币"},
                {"CNH", "元"},
                {"NZD", "新西兰币"}
            },
            角色 = {
                {"PA", "配售代理"},
                {"-", ""},
                {" ", ""},
                {"CCDC", ""},
                {"B&DFOP", "及交割行"},
                {"B&DDvP", "及交割行"},
                {"Arranger", "及安排行"},
                {"Sole", "独家"},
                {"Dealer", "承销商"},
                {"Leftlead", "牵头"},
                {"Active", ""},
                {"SGC", "JGC"},
                {"JGC", "全球协调人"},
                {"JBR", "账簿管理人"},
                {"CoManager", "副经办人"},
                {"DM", "及交易管理人"}
            },
            投资者 = {
                {"占比", ""},
                {"：", ""},
                {" / ", "/"},
                {"（", ""},
                {"）", ""},
                {"EMEA", "欧洲、中东和非洲"},
                {"ASIA", "亚洲"},
                {"BANK", "银行"},
                {"FI", "金融机构"},
                {".00%", "%"},
                {".0%", "%"},
                {"#(lf)", "，"},
                {"资产管理公司", "资管"},
                {"FM", "资管"},
                {"资产管理人", "资管"},
                {"基金经理", "基金"},
                {"AM", "基金"},
                {"基金管理人", "基金"},
                {"基金管理公司", "基金"},
                {"基金管理", "基金"},
                {"保险公司", "保险"},
                {"保险机构", "保险"},
                {"私人银行", "私行"},
                {"PB", "私行"},
                {"SSA", "主权及超主权机构"},
                {"主权、超国家金融机构和代理机构", "主权及超主权机构"},
                {"主权债务评级较高的非营利性公共部门发行的债务", "主权及超主权机构"},
                {"TRADING", "交易账户"},
                {"主权财富基金", "主权基金"},
                {"地区", ""},
                {"欧洲中东非洲", "欧洲、中东和非洲"},
                {"银行财务部门", "司库"}
            },
            一二三 = {
                {"0", "零"},
                {"1", "一"},
                {"2", "二"},
                {"3", "三"},
                {"4", "四"},
                {"5", "五"},
                {"6", "六"},
                {"7", "七"},
                {"8", "八"},
                {"9", "九"},
                {"10", "十"}
            },
            ABC = {
                {"1", "A"},
                {"2", "B"},
                {"3", "C"},
                {"4", "D"},
                {"5", "E"},
                {"6", "F"},
                {"7", "G"},
                {"8", "H"},
                {"9", "I"},
                {"10", "J"}
            },
            国家城市 = {
                {"ABUDHABI", "^AUH^", "AUH", "阿布达比"},
                {"ASTANA", "^NQZ^", "NQZ", "阿斯塔纳"},
                {"DUBAI", "^DXB^", "DXB", "迪拜"},
                {"FRANKFURT", "^FRA^", "FRA", "法兰克福"},
                {"HONGKONG", "^HK^", "HK", "香港"},
                {"HUNGARY", "^BUD^", "BUD", "匈牙利"},
                {"JOHANNESBURG", "^JNB^", "JNB", "约翰内斯堡"},
                {"LONDON", "^LON^", "LON", "伦敦"},
                {"LUXEMBOURG", "^LUX^", "LUX", "卢森堡"},
                {"MACAU", "^MFM^", "MFM", "澳门"},
                {"NEWYORK", "^JFK^", "JFK", "纽约"},
                {"PARIS", "^PAR^", "PAR", "巴黎"},
                {"SINGAPORE", "^SG^", "SG", "新加坡"},
                {"SYDNEY", "^SYD^", "SYD", "悉尼"},
                {"TAIPEI", "^TPE^", "TPE", "台北"},
                {"TOKYO", "^TYO^", "TYO", "东京"},
                {"INDONESIA", "^IND^", "IND", "印尼"},
                {"AUSTRALIA", "^AUS^", "AUS", "澳大利亚"},
                {"SHANGHAI", "^PVG^", "PVG", "上海"},
                {"SYDNEY", "^SY^", "SY", "悉尼"},
                {"SPAIN", "^SPN^", "SPN", "西班牙"},
                {"QATAR", "^QTR^", "QTR", "卡塔尔"}
            },
            LOCATION = List.Zip({List.Transform(国家城市, each List.First(_)), List.Transform(国家城市, each List.Last(_))}),
            #"LOCATION^" = List.Transform(国家城市, each List.FirstN(_, 2)),
            LOCATIONCN = List.Transform(国家城市, each List.LastN(_, 2)),
            RTBC = {{"【", ""}, {"】", ""}},
            // Select Cleaner
            FText = if FTextInput = null then "" else Text.Upper(Text.Trim(FTextInput)),
            Nested =
                if FText = "主体" then
                    主体
                else if List.Contains({"地区", "REGION"}, FText) then
                    地区
                else if FText = "区县" then
                    区县
                else if FText = "评级" or FText = "RTG" then
                    评级
                else if FText = "评级分类" then
                    评级分类
                else if List.Contains({"价格", "FPG", "FPT", "FRN", "IPG", "IPT", "IPT", "PRICE"}, FText) then
                    价格
                else if List.Contains({"结构", "STRUCTURE"}, FText) then
                    结构
                else if FText = "品种" then
                    品种
                else if List.Contains({"周几", "DDDCN"}, FText) then
                    周几
                else if List.Contains({"货币", "CRCYSUFFIX"}, FText) then
                    货币
                else if List.Contains({"角色", "ROLE"}, FText) then
                    角色
                else if List.Contains({"投资者", "STATS"}, FText) then
                    投资者
                else if FText = "一二三" then
                    一二三
                else if FText = "ABC" then
                    ABC
                else if FText = "LOCATION" then
                    LOCATION
                else if FText = "LOCATION^" then
                    #"LOCATION^"
                else if FText = "LOCATIONCN" then
                    LOCATIONCN
                else if FText = "RTBC" then
                    RTBC
                else if FText = "文档符号" then
                    文档符号
                else
                    {{"", ""}},
            Gettbl =
                if FText = "" then
                    Table.FromColumns({FinderList, ReplacerList}, {"Find", "Replace"})
                else
                    Table.FromRows(Nested, {"Find", "Replace"}),
            // Bulk replace
            ReplacerTable = Gettbl,
            FindReplaceList = Table.ToRows(ReplacerTable),
            Counter = Table.RowCount(ReplacerTable),
            BulkReplaceValues = (TextToReplaceTemp, n) =>
                let
                    ReplacedText = Text.Replace(
                        TextToReplaceTemp,
                        if FindReplaceList{n}{0} = null then
                            ""
                        else
                            FindReplaceList{n}{0},
                        if FindReplaceList{n}{1} = null then
                            ""
                        else
                            FindReplaceList{n}{1}
                    )
                in
                    if n = Counter - 1 then
                        ReplacedText
                    else
                        @BulkReplaceValues(ReplacedText, n + 1),
            Output = BulkReplaceValues(TextName, 0)
        in
            Output,
    //metadata-record
    fnType = type function (
        TextName as text,
        optional FTextInput as (
            type nullable text meta [
                Documentation.AllowedValues = {
                    "主体",
                    "文档符号",
                    "地区",
                    "区县",
                    "评级",
                    "价格",
                    "结构",
                    "品种",
                    "周几",
                    "货币",
                    "角色",
                    "投资者",
                    "一二三",
                    "ABC",
                    "LOCATION",
                    "LOCATION^",
                    "LOCATIONCN"
                }
            ]
        ),
        optional FinderList as nullable list,
        optional ReplacerList as nullable list
    ) as list meta [
        Documentation.Name = "fxCleaner",
        Documentation.Description = "主体、地区、区县、评级、价格、结构、品种、周几、货币、角色、投资者、一二三、ABC、LOCATION、LOCATION^、LOCATIONCN"
    ]
in
    Value.ReplaceType(Source, fnType)
