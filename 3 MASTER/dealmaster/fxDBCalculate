(TableName as table) =>
    let
        //
        Source = Table.Buffer(TableName),
        CN_Source = List.Buffer(Table.ColumnNames(Source)),
        //Prep
        DataType = fx("Data")(Source),
        RemovedCol = Table.RemoveColumns(
            DataType,
            {"是否IG", "是否首发", "美元规模分类", "年期分类", "评级分类", "主体评级分类", "结构分类", "货币细分", "上市分类", "BOCOM_DEAL?", "期限"},
            MissingField.Ignore
        ),
        //Add DebutIssuance
        Calculated_DEBUT =
            if List.Contains(Table.ColumnNames(RemovedCol), "DEBUT_DATE") then
                Table.AddColumn(
                    RemovedCol, "是否首发", each if [DEBUT_DATE] = null then "--" else if [定价日] = [DEBUT_DATE] then
                        "Y"
                    else
                        ""
                )
            else
                RemovedCol,
        #"Added FolderPath" = fx("FolderPath")(Calculated_DEBUT),
        #"Added 美元规模分类" = fx("GroupSize")(#"Added FolderPath"),
        #"Added 年期货币评级分类" = fx("GpTenorCCYRtg")(#"Added 美元规模分类"),
        #"Added 清算地" = fx("ISINToCSD")(#"Added 年期货币评级分类"),
        /////////////////////////
        Junction_Start = #"Added 清算地",
        /////////////////////////
        Slicer_EntityRtg = fx("RtgSlicer")(Junction_Start, "主体评级", "主体评级分类", "EN"),
        Slicer_IsIG = Table.AddColumn(
            Slicer_EntityRtg,
            "是否IG",
            each
                if [评级分类] = "投资级" and [主体评级分类] = "IG" then
                    "主体及债项"
                else if [主体评级分类] = "IG" and [评级分类] = "无评级" then
                    "仅主体"
                else if [主体评级分类] = "IG" and [评级分类] = "高收益" then
                    "CrossOver"
                else if [主体评级分类] = "--" and [评级分类] = "IG" and Text.Contains([结构], "备证") then
                    "仅债项(备证)"
                else
                    "--",
            type text
        ),
        Slicer_Structure =
            if Table.HasColumns(Source, "结构") then
                Table.AddColumn(Slicer_IsIG, "结构分类", each Load("fxGroupSTR")([结构]))
            else
                Slicer_IsIG,
        Slicer_Listing =
            if Table.HasColumns(Source, "上市") then
                Table.AddColumn(
                    Slicer_Structure,
                    "上市分类",
                    each
                        if [上市] = null or [上市] = "" or [上市] = "--" or [上市] = "n/a" then
                            "--"
                        else if Text.Contains([上市], ";") then
                            "多地上市"
                        else if [上市] <> "港交所" and [上市] <> "新交所" and [上市] <> "港交所" and [上市] <> "澳交所" and [上市] <> "未上市" then
                            "其他"
                        else
                            [上市]
                )
            else
                Slicer_Structure,
        BOCOMDEAL = Load("fxBOCOMDEAL")(Slicer_Listing),
        // Add CN DES and combine shortnames
        Written_Stats = fx("WriteStats")(BOCOMDEAL),
        Written_Tenor = Table.AddColumn(
            Written_Stats,
            "期限",
            each
                if [期限备注] = null then
                    ""
                else if Text.Contains([期限备注], "天") or Text.Contains([期限备注], "月") then
                    [期限备注]
                else if not Text.Contains([年期], "P") then
                    [年期] & "年"
                else if Text.Contains([年期], "P") then
                    "永续(前" & Text.AfterDelimiter([年期], "PNC") & "年不可赎回)"
                else
                    ""
        ),
        Written_CCYSize = Load("fxWriteCCYSize")(Written_Tenor, "发行规模(亿)", "货币", "增发判定"),
        Written_Theme = Load("fxWriteTheme")(Written_CCYSize),
        Written_BISLRole = fx(
            "Replace"
        )(
            Table.AddColumn(Written_Theme, "角色", each [IS_LEAD] & [BISL_ROLE] & [#"IS_B&D"], type text), {"角色"},
            "ROLE"
        ),
        //
        CombinedName = Load("fxNameCombiner")(Written_BISLRole),
        // Add Comparer
        AddedComp = Table.AddColumn(
            CombinedName,
            "COMPARER",
            each
                if [PROJECT_NAME] <> "" then
                    Text.From([YYMMDD]) & Text.Upper(Text.Remove([PROJECT_NAME], " "))
                else
                    Text.From([YYMMDD]) & [信用主体简称],
            type text
        ),
        ////////////////////////
        Junction = if not List.ContainsAll(CN_Source, {"上市", "主体评级", "BISL_ROLE"}) then Junction_Start else AddedComp,
        /////////////////////////
        RCol = Table.RemoveColumns(
            Junction, List.Select(Table.ColumnNames(Junction), each Text.Contains(_, "Dummy")), MissingField.Ignore
        ),
        Checked = fx("CheckNDupe")(RCol),
        Sorted = fx("SortNIndex")(Checked),
        Presented = fx("PresentNoData")(Sorted)
    in
        Presented
