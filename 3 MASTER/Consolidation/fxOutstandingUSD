(TableName as table, optional inputNewCol as list, optional smallerslicer as nullable number) =>
    let
        // FX
        FXSource = Table.Buffer(CWB("FXtbl")),
        HD_S = {"Base Currency", "USD"},
        NewCol = if inputNewCol = null or inputNewCol = {null} then {"余额亿美元", "余额美元规模分类"} else inputNewCol,
        Count = List.Count(NewCol),
        #"Filtered Rows" = Table.SelectRows(FXSource, each ([YYQQ] = "24Q1")),
        #"Removed Other Columns" = Table.SelectColumns(#"Filtered Rows", HD_S),
        FXOutput = Table.TransformColumnTypes(#"Removed Other Columns", {{"USD", type number}}),
        // FX
        Source = Table.RemoveColumns(TableName, HD_S & NewCol, MissingField.Ignore),
        #"Joined FX" = Table.Join(Source, "货币", FXOutput, "Base Currency", JoinKind.LeftOuter),
        #"Inserted Multiplication" = Table.AddColumn(#"Joined FX", NewCol{0}, each [USD] * [债券余额], type number),
        #"Rounded Off" = Table.TransformColumns(
            #"Inserted Multiplication", {{NewCol{0}, each Number.Round(_, 3), type number}}
        ),
        Slicer_Size0 = fx("GroupRange")(#"Rounded Off", NewCol, {"--", 2, 3, 5}, "亿"),
        Slicer_Size = Table.ReplaceValue(
            Slicer_Size0,
            "≤2亿",
            each if Record.Field(_, NewCol{0}) <= 1 then "≤1亿" else "1-2亿",
            Replacer.ReplaceValue,
            {NewCol{1}}
        ),
        Crossroad =
            if  Count =1 then #"Rounded Off" else if smallerslicer <> null then
                Slicer_Size
            else 
                Slicer_Size0
         ,
        #"Removed Columns" = Table.RemoveColumns(Crossroad, HD_S & {"Dummy" & NewCol{0}}, MissingField.Ignore),
        Output = if Table.HasColumns(Source, "债券余额") then #"Removed Columns" else Source
    in
        Output
