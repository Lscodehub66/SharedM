let
    Source = Load("DLD_Filtered"),
    #"Inserted FRN" = fx("AddFRNString")(Source),
    #"Inserted IPG" = fx("AddIPGString")(#"Inserted FRN"),
    #"Inserted FPG" = fx("AddFPGString")(#"Inserted IPG"),
    #"Checked Price" = fx("CrossCheck")(#"Inserted FPG", "价格"),
    //
    CWBConso = Load("DLD_priceNstats_SelfJoin"),
    Joined = Table.Join(#"Checked Price", "Check", CWBConso, "Dummy.Check", JoinKind.LeftOuter),
    #"Replaced Value" = List.Accumulate(
        {"Dummy.IPG", "Dummy.FPG", "Dummy.定价", "Dummy.投资者类型", "Dummy.投资者分布", "Dummy.Check"},
        Joined,
        (x, y) => try Table.TransformColumns(x, {{y, each if _ = null then "" else _, type text}}) otherwise y
    ),
    #"Replaced null" = List.Accumulate(
        {"认购额(亿)", "投资者账户数"},
        #"Replaced Value",
        (x, y) => Table.ReplaceValue(x, null, each Record.Field(_, "Dummy." & y), Replacer.ReplaceValue, {y})
    ),
    #"Replaced Blank" = List.Accumulate(
        {"IPG", "FPG", "定价", "投资者类型", "投资者分布"},
        #"Replaced null",
        (x, y) =>
            Table.ReplaceValue(
                Table.ReplaceValue(x, "", each Record.Field(_, "Dummy." & y), Replacer.ReplaceValue, {y}),
                "【】",
                each
                    if not List.Contains({"", "【】"}, Record.Field(_, "Dummy." & y)) then
                        Record.Field(_, "Dummy." & y)
                    else
                        "【】",
                Replacer.ReplaceValue,
                {y}
            )
    ),
    #"Replaced both Non-blank" = List.Accumulate(
        {"IPG", "FPG", "定价", "认购额(亿)", "投资者账户数", "投资者类型", "投资者分布"},
        #"Replaced Blank",
        (x, y) =>
            Table.ReplaceValue(
                x,
                each Record.Field(_, y),
                each
                    if
                        not List.Contains({null, "", "【】"}, Record.Field(_, y))
                        and not List.Contains({null, "", "【】"}, Record.Field(_, "Dummy." & y))
                        and Record.Field(_, y) <> Record.Field(_, "Dummy." & y)
                    then
                        Record.Field(_, "Dummy." & y)
                    else
                        Record.Field(_, y),
                Replacer.ReplaceValue,
                {y}
            )
    ),
    #">>ISIN_Intersect" = List.Intersect({Source[Check], CWBConso[Dummy.Check]}),
    Checked = fx(
        "CheckNDupe"
    )(
        if List.IsEmpty(#">>ISIN_Intersect") then #"Checked Price" else #"Replaced both Non-blank"
    ),
    Sorted = fx("SortNIndex")(Checked),
    //
    CN = List.Distinct(
        {
            "Index",
            "ISIN",
            "定价日",
            "债券简称",
            "IPG",
            "FPG",
            "定价",
            "认购额(亿)",
            "投资者账户数",
            "投资者类型",
            "投资者分布",
            "货币",
            "浮息定价",
            "IPT_DMI",
            "FPG_DMI",
            "Check"
        }
    ),
    SCol = Table.SelectColumns(Sorted, CN, MissingField.UseNull)
in
    SCol
