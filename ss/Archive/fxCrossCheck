(TableName as table, optional _inputkey as nullable text) =>
    let
        Key = Text.Upper(Text.Trim(_inputkey ?? "")),
        Source = TableName,
        BBGCheck_1 = List.Accumulate(
            {{"发行评级", "债项评级"}, {"主体评级", "穆迪/标普"}},
            Source,
            (x, y) =>
                if Table.HasColumns(Source, y) then
                    Table.ReplaceValue(
                        x,
                        each Record.Field(_, y{0}),
                        each
                            if List.Contains({null,"","【】"}, Record.Field(_, y{0})) and List.Contains({null,"","【】"}, Record.Field(_, y{1}))then
                                "【】/【】/【】"
                            else if  List.Contains({null,"","【】"}, Record.Field(_, y{1})) then
                                "【" & Record.Field(_, y{0}) & "】"
                            else if Record.Field(_, y{0}) = "" or (Record.Field(_, y{0}) = "--/--/--" and Record.Field(_, y{1}) <> "--/--") then
                                Record.Field(_, y{1}) & "/【】"
                            else
                                Record.Field(_, y{0}),
                        Replacer.ReplaceValue,
                        {y{0}}
                    )
                else
                    x
        ),
        #"EntityRtg TBC" = Table.ReplaceValue(
            BBGCheck_1,
            each [主体评级],
            each if [主体评级] = "--/--/--" and [发行评级] <> "--/--/--" then "【" & [发行评级] & "】" else [主体评级],
            Replacer.ReplaceValue,
            {"主体评级"}
        ),
        BBGCheck_2 = List.Accumulate(
            {"计息基准", "SBLC提供者"},
            #"EntityRtg TBC",
            (x, y) =>
                if Table.HasColumns(Source, y) then
                    Table.ReplaceValue(
                        x,
                        "",
                        each
                            if not List.Contains({null, ""}, Record.Field(_, "Dummy" & y)) then
                                Record.Field(_, "Dummy" & y)
                            else
                                "",
                        Replacer.ReplaceValue,
                        {y}
                    )
                else
                    x
        ),
        #"FPT Missing w IPT" = Table.ReplaceValue(
            Source, "", each if [IPG] <> "" then "【】" else "", Replacer.ReplaceValue, {"FPG"}
        ),
        #"FRN Price w No Spd" = Table.ReplaceValue(
            #"FPT Missing w IPT",
            "【】",
            each
                if [FPG] <> "" and not Text.Contains([FPG], "-") and not Text.Contains([FPG], "【") then
                    [FPG]
                else
                    "【】",
            Replacer.ReplaceValue,
            {"浮息定价"}
        ),
        #"Price Missing w FPT Range" = Table.AddColumn(
            Table.RemoveColumns(#"FRN Price w No Spd",{"定价"}, MissingField.Ignore),
            "定价",
            each
                if [IPG] = "" then
                    ""
                else if not Text.Contains([FPG], "-") and not Text.Contains([FPG], "【") then
                    [FPG]
                else
                    "【】"
        ),
        Output =
            if Text.Contains(Key, "价格") then
                Table.AddColumn(#"Price Missing w FPT Range", "Dummy.PriceCheck", each "Checked", type text)
            else
                Table.AddColumn(BBGCheck_2, "Dummy.BBGCheck", each "Checked", type text)
    in
        Output
