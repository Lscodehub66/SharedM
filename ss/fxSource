(_input as text) =>
    let
        // _input = _debugfxSource,
        excelkey =
            if _input = "DMI" then
                "美元债一级"
            else
                Text.Remove(Text.BeforeDelimiter(Text.Upper(_input ?? ""), "_"), {" "}),
        sheetkey =
            if List.Contains({"美元债一级", "银行", "违约"}, excelkey) then
                excelkey
            else
                Text.Replace(Text.AfterDelimiter(Text.Upper(_input ?? ""), "_"), "=", ""),
        transformationkey = excelkey & "." & sheetkey,
        #"SkipNPromote" = [
            YY.城投 = 0,
            YY.金融 = 0,
            YY.产业 = 0,
            #"美元债一级.美元债一级" = 1,
            #"违约.违约" = 1,
            #"银行.银行" = 1,
            DOWNLOAD.美元债一级 = 1
        ],
        Is0 = Record.HasFields(#"SkipNPromote", transformationkey),
        Record1 = [
            #"美元债一级.美元债一级" = 1,
            #"违约.违约" = 1,
            #"银行.银行" = 1,
            DOWNLOAD.美元债一级 = 1
        ],
        Is1 = Record.HasFields(Record1, transformationkey),
        #"FindAncorValue" = [
            BBGFX.VALUE = {"Column1", "Base Currency"},
            DOWNLOAD.美元债一级 = {1, "", "Column"},
            DOWNLOAD.ECON = {"Column1", "Date Time"},
            KYC.MASTER = {"Column2", "序号"},
            台账23.合规 = {"Column3", "团队"},
            台账24.合规 = {"Column3", "团队"},
            台账24.收入情况2023 = {"Column2", "Project Name"},
            台账23.收入情况2023 = {"Column2", "Project Name"}
        ],
        Is2 = Record.HasFields(#"FindAncorValue", transformationkey),
        Fn = fx("ExcelRecord")(excelkey),
        Output0 =
            let
                tbl1 = Table.SelectRows(
                    Fn, each Text.Contains([Name], sheetkey, Comparer.OrdinalIgnoreCase)
                )[Data]{
                    0
                },
                #"Promoted Headers" = fx(
                    "Data"
                )(
                    fx("RemoveBlankColumns")(Table.PromoteHeaders(tbl1, [PromoteAllScalars = true]))
                )
            in
                fx("Data")(#"Promoted Headers"),
        Output1 =
            let
                tbl = Fn[Data]{0},
                #"Removed Top Rows" = Table.Skip(tbl, 1),
                #"Promoted Headers" = fx(
                    "Data"
                )(
                    Table.PromoteHeaders(#"Removed Top Rows", [PromoteAllScalars = true])
                )
            in
                fx("Data")(#"Promoted Headers"),
        Output2 =
            let
                tbl2 = Table.SelectRows(
                    Fn, each Text.Contains([Name], sheetkey, Comparer.OrdinalIgnoreCase)
                )[Data]{
                    0
                },
                Custom1 = fx("SheetTotbl")(tbl2, Record.Field(#"FindAncorValue", transformationkey))
            in
                fx("Data")(Custom1),
        results = if Is0 = true then Output0 else if Is1 = true then
            Output1
        else
            try Output2 otherwise fx("Excel")(_input)
    in
        results
