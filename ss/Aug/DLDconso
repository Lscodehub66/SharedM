let
 Prefix      = "Dummy", 
 Source      = dmi, 
 Source2     = fxDataFormat ( Excel.CurrentWorkbook(){[ Name = "Table_dmi" ]}[Content] ), 
 Function    = Table.AddColumn ( Source, "亿美元", each if [货币] = "USD" then 1 * [#"发行规模(亿)"] else fxSmartFX ( "USD", [货币], [定价日] ) * [#"发行规模(亿)"] ), 
 Function1   = Table.AddColumn ( Function, "亿元", each if [货币] = "CNH" then 1 * [#"发行规模(亿)"] else fxSmartFX ( "CNH", [货币], [定价日] ) * [#"发行规模(亿)"] ), 
 Function2   = Table.AddColumn ( Function1, "亿港币", each if [货币] = "HKD" then 1 * [#"发行规模(亿)"] else fxSmartFX ( "HKD", [货币], [定价日] ) * [#"发行规模(亿)"] ), 
 Function3   = fxDMIStats ( Function2 ), 
 Function4   = fxIsFIMTN ( Function3, 1 ), 
 MergedCr    = fxDynamicMerge ( Function4, mCredit, "信用主体", "信用主体", { "" }, { "" } ), 
 Replaced    = Table.ReplaceValue (
  fxDynamicMerge ( MergedCr, credit_all, "信用主体", "信用主体", { "DEBUT_DATE" }, { Prefix & "DEBUT_DATE" } ), 
  null, 
  each if Record.Field ( _, Prefix & "DEBUT_DATE" ) <> null then Record.Field ( _, Prefix & "DEBUT_DATE" ) else [定价日], 
  Replacer.ReplaceValue, 
  { "DEBUT_DATE" }
 ), 
 // MultiSource Steps
 FnMerger    = fxDynamicMerge ( Replaced, BBGcorp, "Check", "Check", { "发行人注册地", "发行人主上市地", "补充OMAS updates", "定价息差", "债项BBG", "主体BBG" }, { "注册成立地", "发行人主上市地", "补充OMAS updates", "定价息差", "发行评级", "主体评级" } ), 
 Replaced1   = Table.ReplaceValue ( FnMerger, null, each [债项评级], Replacer.ReplaceValue, { "发行评级" } ), 
 Replaced2   = Table.ReplaceValue ( Replaced1, null, each [#"穆迪/标普"], Replacer.ReplaceValue, { "主体评级" } ), 
 Replaced3   = Table.ReplaceValue (
  fxDynamicMerge ( Replaced2, WST, "Check", "Check", { "IPT" }, { Prefix & "IPT" } ), 
  "", 
  each if Record.Field ( _, Prefix & "IPT" ) <> null then Record.Field ( _, Prefix & "IPT" ) else "", 
  Replacer.ReplaceValue, 
  { "IPT_DMI" }
 ), 
 // End of MultiSource
 Crossroad   = if MultiSource = "OFF" then Table.RenameColumns ( Replaced, { { "债项评级", "发行评级" }, { "穆迪/标普", "主体评级" } }, MissingField.UseNull ) else Replaced3, 
 CheckedDupe = fxCheckNDupe ( Crossroad ), 
 AddedIndex  = Table.AddIndexColumn ( CheckedDupe, "Index", 1, 1, Int64.Type ), 
 SelectedCol = Table.SelectColumns ( AddedIndex, List.Distinct ( List.Transform ( Table.ColumnNames ( AddedIndex ), each fxClean ( _, { Prefix }, { "" } ) ) ) ), 
 Reordered   = Table.ReorderColumns ( SelectedCol, Table.ColumnNames ( Excel.CurrentWorkbook(){[ Name = "DLDconso" ]}[Content] ), MissingField.UseNull )
in
 Reordered