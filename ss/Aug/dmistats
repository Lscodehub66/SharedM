// GPS
// GPS
let

GPS = Excel.CurrentWorkbook(){[Name="GPS"]}[Content][Column1]{0}
in
    GPS

// SharedM
let
 Source    = Folder.Files ( if GPS = "Remote" then "C:\Users\ktkt2\OneDrive\EXE Team\DataHub\SharedM" else "\\10.10.1.215\dcm$\Team Folder\Execution Team\DataHub\SharedM" ), 
 Filtered  = Table.SelectRows ( Source, each not Text.Contains ( [Folder Path], ".git" ) and not Text.Contains ( [Name], "git" ) and [Name] <> "" and not Text.Contains ( [Folder Path], "\ss\" ) ), 
 Merged    = Table.AddColumn ( Filtered, "Path", each Text.Combine ( { [Folder Path], [Name] }, "" ), type text ), 
 Extracted = Table.TransformColumns ( Merged, { { "Folder Path", each Text.AfterDelimiter ( _, "SharedM\" ), type text }, { "Name", each Text.BeforeDelimiter ( _, "." ), type text } } ), 
 Removed   = Table.SelectColumns ( Extracted, { "Name", "Folder Path", "Path" } )
in
 Removed

// fxShared
// fxShared
( FunctionFileName as text ) =>
 let
  Filtered = Table.SelectRows (SharedM, each [Name] = FunctionFileName ), 
  Path     = Filtered[Path]{0}, 
  Source   = Text.FromBinary ( File.Contents ( Path ) ) 

 in
  Source

// fxDMILoad
// fxDMILoad
let 
Source = fxShared("fxDMILoad"),
    EVA = Expression.Evaluate(Source, #shared)    
in
    EVA

// fxLauncher
let 
Source = fxShared("fxLauncher"),
    EVA = Expression.Evaluate(Source, #shared)    
in
    EVA

// LaunchDownload
// LaunchDownload
let

Source = fxLauncher("1.Download",null)
in
Source

// dmi
let
 Source       = LaunchDownload, 
 DMI_Sheet    = Source{[ Item = "美元债一级", Kind = "Sheet" ]}[Data], 
 RemovedTop   = Table.Skip ( DMI_Sheet, 1 ), 
 Promoted     = Table.PromoteHeaders ( RemovedTop, [ PromoteAllScalars = true ] ), 
 Functionload = fxDMILoad ( Promoted ), 
 Filtered     = Table.SelectRows ( Functionload, each if WeeklyFilter <> "OFF" then [定价日] < Date.FromText ( Monday ) and [定价日] >= Date.AddDays ( Date.FromText ( Monday ), - 7 ) else true )
in
 Filtered

// WeeklyFilter
"ON" meta [IsParameterQuery=true, List={"ON", "OFF"}, DefaultValue="ON", Type="Text", IsParameterQueryRequired=true]

// Monday
"2023/07/24" meta [IsParameterQuery=true, List={"2023/03/20", "2023/03/27", "2023/04/03", "2023/04/10", "2023/04/17", "2023/04/24", "2023/05/01", "2023/05/08", "2023/05/15", "2023/05/22", "2023/05/29", "2023/06/05", "2023/06/12", "2023/06/19", "2023/06/26", "2023/07/03", "2023/07/10", "2023/07/17", "2023/07/24", "2023/07/31", "2023/08/07", "2023/08/14", "2023/08/21", "2023/08/28", "2023/09/04", "2023/09/11", "2023/09/18", "2023/09/25", "2023/10/02", "2023/10/09", "2023/10/16", "2023/10/23", "2023/10/30", "2023/11/06", "2023/11/13", "2023/11/20", "2023/11/27", "2023/12/04", "2023/12/11", "2023/12/18"}, DefaultValue=..., Type="Text", IsParameterQueryRequired=true]

// dmistats
let
 Source      = dmi, 
 Filtered    = Table.SelectRows ( Source, each [投资者账户数] <> null or [投资者分布] <> null or [投资者类型] <> null or [#"认购额(亿)"] <> null ), 
 ChangedType = Table.TransformColumnTypes ( Filtered, { { "认购额(亿)", type number }, { "投资者账户数", type number } } ), 
 Division    = Table.AddColumn ( ChangedType, "超额认购倍数", each if [#"认购额(亿)"] <> null then ( [#"认购额(亿)"] / [#"发行规模(亿)"] ) else null, type number ), 
 RoundedOff  = Table.TransformColumns ( Division, { { "认购额(亿)", each Number.Round ( _, 1 ), type number }, { "超额认购倍数", each Number.Round ( _, 1 ), type number }, { "投资者账户数", each Number.Round ( _, 0 ), type number } } ), 
 AddCol      = Table.AddColumn ( RoundedOff, "认购描述", each if [#"认购额(亿)"] <> null then "认购额超" & Number.ToText ( [#"认购额(亿)"] ) & "亿" & fxSmartClean ( [货币], "CrcySuffix" ) & "，超额认购" & Number.ToText ( [超额认购倍数] ) & "倍；" else "" ), 
 AddCol1     = Table.AddColumn ( AddCol, "地区分布描述", each if [投资者分布] <> null then "地区分布：" & [投资者分布] & "；" else "" ), 
 AddCol2     = Table.AddColumn ( AddCol1, "类型分布描述", each if [投资者类型] <> null then "投资者类型：" & fxSmartClean ( [投资者类型], "InvestorType" ) else "" ), 
 Merged      = Table.AddColumn ( AddCol2, "Stats描述", each Text.Combine ( { [认购描述], [地区分布描述], [类型分布描述] }, "#(lf)" ), type text ), 
 SelectedCol = Table.SelectColumns ( Merged, { "ISIN", "Check", "信用主体", "定价日","认购额(亿)", "超额认购倍数", "投资者账户数", "投资者类型", "投资者分布", "Stats描述" } )
in
 SelectedCol

// fxSmartClean
// fxSmartClean
let 
Source = fxShared("fxSmartClean"),
    EVA = Expression.Evaluate(Source, #shared)    
in
    EVA