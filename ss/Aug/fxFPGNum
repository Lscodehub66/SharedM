let
    Source = (TableName as table, ColToClean as text, FastLoadNum1 as nullable number) =>
  let
    Source = TableName, 
    #"FastLoad Filter" = Table.SelectRows(
      Source, 
      each 
        if FastLoadNum1 = 1 then
          Record.Field(_, ColToClean)
            <> null and Record.Field(_, ColToClean)
            <> "" and Record.Field(_, ColToClean)
            <> "--"
        else
          true
    ), 
    #"Dupe CustomColA" = Table.DuplicateColumn(#"FastLoad Filter", ColToClean, "CopyColA"), 
    #"Removed CustomCol" = Table.RemoveColumns(#"Dupe CustomColA", {"FPT1"}, MissingField.Ignore), 
    // Skip 
    #"Invoked fxListToNull" = fxListToNull(#"Removed CustomCol"), 
      // Skip 
   CustomFunction = Table.AddColumn(  #"Removed CustomCol" , "FPT1", each fxSmartClean([CopyColA],"Price")),
   RemovedCopyCol = Table.RemoveColumns(
     CustomFunction, 
      {"CopyColA"}, 
      MissingField.Ignore
    ), 
    #"FPT _Delimiter2" = Table.TransformColumns(
  RemovedCopyCol, 
      {{"FPT1", each Text.BeforeDelimiter(_, "，"), type text}}
    ), 
    #"识别Multi-FPT" = Table.ReplaceValue(
      #"FPT _Delimiter2", 
      each [FPT1], 
      each if Text.Contains([FPT1], "%/") = true then "【CHECK:MULTI-FPT】" else [FPT1], 
      Replacer.ReplaceText, 
      {"FPT1"}
    ), 
    #"识别WPIR" = Table.AddColumn(
      #"识别Multi-FPT", 
      "WPIR1", 
      each Text.AfterDelimiter([FPT1], "+/-"), 
      type text
    ), 
    #"Text Select WPIR1" = Table.AddColumn(
      #"识别WPIR", 
      "WPIR", 
      each Text.Select([WPIR1], {"0" .. "9", "-", "."})
    ), 
    #"Transform FPT" = Table.AddColumn(
      #"Text Select WPIR1", 
      "FPT2", 
      each Text.BeforeDelimiter([FPT1], "+/-"), 
      type text
    ), 
    #"Extracted FPT before ( Delimiter" = Table.TransformColumns(
      #"Transform FPT", 
      {{"FPT2", each Text.BeforeDelimiter(_, "("), type text}}
    ), 
    #"FPT基点" = Table.AddColumn(
      #"Extracted FPT before ( Delimiter", 
      "FPT_SPD1", 
      each Text.AfterDelimiter([FPT2], "+"), 
      type text
    ), 
    #"Text Select FPT基点" = Table.AddColumn(
      #"FPT基点", 
      "FPT_SPD", 
      each Text.Select([FPT_SPD1], {"0" .. "9", "-", "."})
    ), 
    #"识别FPT基点上限" = Table.AddColumn(
      #"Text Select FPT基点", 
      "FPT_SPD上限1", 
      each Text.AfterDelimiter([FPT_SPD1], "-"), 
      type text
    ), 
    #"Text Select FPT上限" = Table.AddColumn(
      #"识别FPT基点上限", 
      "FPT_SPD上限", 
      each Text.Select([FPT_SPD上限1], {"0" .. "9", "."})
    ), 
    #"Final: FPT基点" = Table.TransformColumns(
      #"Text Select FPT上限", 
      {{"FPT_SPD", each Text.BeforeDelimiter(_, "-"), type text}}
    ), 
 
    #"Changed Type1" = Table.TransformColumnTypes(
      #"Final: FPT基点", 
      {{"FPT_SPD", type number}, {"FPT_SPD上限", type number}, {"WPIR", type number}}
    ), 
    #"计算FPT基点下限" = Table.AddColumn(
      #"Changed Type1", 
      "FPT_SPD假设窄端", 
      each 
        if [FPT_SPD] <> null and [WPIR] <> null then
          [FPT_SPD] - [WPIR]
        else if [FPT_SPD] <> null then
          [FPT_SPD]
        else
          null
    ), 
    #"FPT收益率" = Table.AddColumn(
      #"计算FPT基点下限", 
      "FPT_YIELD", 
      each Text.BeforeDelimiter([FPT2], "%", {0, RelativePosition.FromEnd}), 
      type text
    ), 
    #"清除%得出收益率" = Table.ReplaceValue(#"FPT收益率", "%", "", Replacer.ReplaceText, {"FPT_YIELD"}), 
    #"FPT收益率上限" = Table.AddColumn(
      #"清除%得出收益率", 
      "FPT_YIELD上限", 
      each Text.AfterDelimiter([FPT_YIELD], "-"), 
      type text
    ), 
    #"clean FPT收益率" = Table.TransformColumns(
      #"FPT收益率上限", 
      {{"FPT_YIELD", each Text.BeforeDelimiter(_, "-"), type text}}
    )
  in
    #"clean FPT收益率"
in
    Source