let
 Source       = R2R3source, 
 Merged       = Table.AddColumn ( Source, "币种规模品种", each Text.Combine ( { [币种规模], [发行品种] }, "" ), type text ), 
 Grouped      = Table.Group (
  Merged, 
  { "COMPARER" }, 
  {
   { "多笔", each List.Sum ( [多笔] ) / List.Count ( [多笔] ), type number }, 
   { "多币种", each List.Sum ( [多币种] ) / List.Count ( [多币种] ), type number }, 
   { "多品种", each List.Sum ( [多品种] ) / List.Count ( [多品种] ), type number }, 
   { "多期限", each List.Sum ( [多期限] ) / List.Count ( [多期限] ), type number }, 
   {
    "多币种详情", 
    each 
     if List.Sum ( [多币种] ) / List.Count ( [多币种] ) > 1 and List.Sum ( [多品种] ) / List.Count ( [多品种] ) = 1 then
      Text.Combine ( [币种规模], "及" )
     else
      { "" }{0}, 
    type text
   }, 
   { "唯一品种", each if List.Sum ( [多品种] ) / List.Count ( [多品种] ) = 1 then Text.Combine ( List.Distinct ( [发行品种] ), "," ) else { "" }{0}, type text }, 
   { "多品种详情", each if List.Sum ( [多品种] ) / List.Count ( [多品种] ) > 1 then Text.Combine ( [币种规模品种], "," ) else { "" }{0}, type text }, 
   { "Crcy", each Text.Combine ( List.Distinct ( [货币] ), "," ), type text }, 
   {
    "唯一币种合计", 
    each 
     if List.Contains ( [货币], "USD" ) and List.Sum ( [多币种] ) / List.Count ( [多币种] ) = 1 and List.Sum ( [多品种] ) / List.Count ( [多品种] ) = 1 then
      Number.ToText ( List.Sum ( [亿美元] ) ) & "亿美元"
     else if List.Contains ( [货币], "CNH" ) and List.Sum ( [多币种] ) / List.Count ( [多币种] ) = 1 and List.Sum ( [多品种] ) / List.Count ( [多品种] ) = 1 then
      Number.ToText ( List.Sum ( [亿元] ) ) & "亿元"
     else
      { "" }{0}, 
    type text
   }
  }
 ), 
 BDelimiter   = Table.AddColumn ( Grouped, "R2", each if [多品种] = 1 then Text.BeforeDelimiter ( [唯一品种], "," ) else [唯一品种], type text ), 
 Added2       = Table.AddColumn (
  BDelimiter, 
  "R3", 
  each 
   if [多品种] > 1 then
    [多品种详情]
   else if [多期限] = 2 and [多币种] = 1 then
    "双期限共" & [唯一币种合计]
   else if [多期限] > 2 and [多币种] = 1 then
    Number.ToText ( [多笔] ) & "种期限共" & [唯一币种合计]
   else if [多品种] = 1 then
    [多币种详情]
   else
    [唯一币种合计]
 ), 
 BDelimiter2  = Table.AddColumn ( Added2, "R3A", each Text.AfterDelimiter ( [R3], "," ), type text ), 
 BDelimiter3  = Table.TransformColumns ( BDelimiter2, { { "R3", each Text.BeforeDelimiter ( _, "," ), type text } } ), 
 Replaced1    = Table.ReplaceValue ( BDelimiter3, "", each [R3A], Replacer.ReplaceValue, { "R2" } ), 
 Replaced2    = Table.ReplaceValue ( Replaced1, ",", "#(lf)", Replacer.ReplaceText, { "R2" } ), 
 SelectedCol2 = Table.SelectColumns ( Replaced2, { "COMPARER", "R2", "R3" } )
in
 SelectedCol2