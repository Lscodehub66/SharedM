//let LoadCode = Load("wDeal","Code"), EVA = Expression.Evaluate(LoadCode ,#shared) in EVA
let
    p = "ForReview_",
    wIssue = CWB(p & "wIssue", "1"),
    //
    ACol1 = Table.AddColumn(wIssue, "mIssue", each "Y"),
    RemovedCol = Table.RemoveColumns(ACol1, Get("Header_MergeRemoval"), MissingField.Ignore),
    Filtered = Table.SelectRows(
        RemovedCol, each ([定价日] <> null) and [ISIN] <> null and [删除及隐藏] <> "删除" and [删除及隐藏] <> "【删除】"
    ),
    wBond = Load("ForReview_wBond"),
    Merged3 = fx("Merge")(Filtered, wBond, "ISIN", "ISIN", {""}, {""}),
    SourceDB = fx("Combine")({Merged3, CWB("ForReview_wChart", "1")}, null, {10}),
    //
    wStats = Load("ForReview_wStats"),
    wBOCOM = Load("ForReview_wBOCOM"),
    wCredit = Load("wCredit_Reviewed"),
    Filtered_Add = CWB("Filtered_Add"),
    Merged = List.Accumulate(
        {
            {wStats, "mStats", "Check"},
            {wBOCOM, "mEXE", "Check"},
            {wCredit, "mCredit", "信用主体"},
            {Filtered_Add, "DLD_Add", "Check"}
        },
        SourceDB,
        (x, y) =>
            fx(
                "Merge"
            )(
                x,
                if Table.HasColumns(y{0}, y{1}) then
                    Table.TransformColumns(
                        y{0}, {{y{1}, each if not List.Contains({"n/a", "已收录", "", "--"}, _) then "Y" else _}}
                    )
                else
                    Table.AddColumn(y{0}, y{1}, each "Y", type text),
                y{2},
                y{2},
                {""},
                {""}
            )
    ),
    FirstTime = Table.ReplaceValue(
        Merged, null, each if [mCredit] = "Y" then [定价日] else null, Replacer.ReplaceValue, {"DEBUT_DATE"}
    ),
    Custom1 = Table.TransformColumns(
        FirstTime,
        {
            {"主体评级", each if _ <> "【】" then Text.Replace(_, "【】", "【--】") else _},
            {"发行评级", each if _ <> "【】" then Text.Replace(_, "【】", "【--】") else _},
            {
                "信用主体",
                each
                    if List.Count(Text.Split(_, "【")) > 2 then
                        Text.BeforeDelimiter(_, "【", {0, RelativePosition.FromEnd})
                    else
                        _
            }
        }
    ),
    TF = fx("SelfJoin_IPG")(Custom1),
    CN = Table.ColumnNames(TF),
    DM = {"mIssue", "mStats", "mBISL", "mEXE", "mCredit"},
    HD = List.Distinct(List.Accumulate(DM, {"mBond"} & CWB("mBond", "CN"), (x, y) => x & {y} & CWB(y, "CN"))),
    Reordered = Table.SelectColumns(TF, HD, MissingField.Ignore),
    Replaced = Table.ReplaceValue(Reordered, "新增", "Y", Replacer.ReplaceValue, DM & {"mBond"}),
    Custom2 = fx("DBManager2")(Replaced)
in
    Custom2
