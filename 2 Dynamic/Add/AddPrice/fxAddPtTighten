(TableName as table, optional InitialCol as text, optional PricedCol as text) =>
    let
        Source = TableName,
        // InitialCol = null, PricedCol = null,
        ColToAdd = {"InitialNumText", "PricedNumText", "Tighten_Pt"},
        PrepRemoval = Table.RemoveColumns(Source, ColToAdd, MissingField.Ignore),
        #"Remove FilledTBC" = Table.TransformColumns(PrepRemoval, {{PricedCol??"定价", each if _ <> "【】" then Text.Remove(Text.Remove(_,"】"),"【") else _, type text}}),
        #"Inserted Text Between Delimiters" = Table.AddColumn(
                  #"Remove FilledTBC" ,
            "InitialNumText",
            each
                if
                    not Text.Contains(Record.Field(_, (InitialCol ?? "IPG")), "【")
                    and not Text.Contains(Record.Field(_, (PricedCol ?? "定价")), "【")
                    and Text.Contains(Record.Field(_, (InitialCol ?? "IPG")), "%")
                    and Text.Contains(Record.Field(_, (PricedCol ?? "定价")), "%")
                then
                    Text.BeforeDelimiter(Record.Field(_, (InitialCol ?? "IPG")), "%")
                else
                    "",
            type text
        ),
        #"Inserted Text After Delimiter" = Table.AddColumn(
            #"Inserted Text Between Delimiters",
            "PricedNumText",
            each
                if
                    not Text.Contains(Record.Field(_, (InitialCol ?? "IPG")), "【")
                              and not Text.Contains(Record.Field(_, (PricedCol ?? "定价")), "【")
                    and Text.Contains(Record.Field(_, (InitialCol ?? "IPG")), "%")
                    and Text.Contains(Record.Field(_, (PricedCol ?? "定价")), "%")
                then
                    Text.BeforeDelimiter(Record.Field(_, (PricedCol ?? "定价")), "%")
                else
                    "",
            type text
        ),
        #"Changed Type" = Table.TransformColumnTypes(
            #"Inserted Text After Delimiter", {{"InitialNumText", type number}, {"PricedNumText", type number}}
        ),
        #"Inserted Subtraction" = Table.AddColumn(
            #"Changed Type", "Tighten_Pt", each Number.Round(([InitialNumText] - [PricedNumText]) * 100, 1), type number
        ),
        #"Replaced Value1" = Table.ReplaceValue(
            #"Inserted Subtraction",
            each [Tighten_Pt],
            each if [Tighten_Pt] > 100 or [Tighten_Pt] < 0 then null else [Tighten_Pt],
            Replacer.ReplaceValue,
            {"Tighten_Pt"}
        ),
        #"Removed Columns" = Table.RemoveColumns(#"Replaced Value1", {"InitialNumText", "PricedNumText"}),
        #"Changed Type1" = Table.TransformColumnTypes(#"Removed Columns", {{"Tighten_Pt", type number}}),
        #"Inserted TigentenConso" = Table.AddColumn(
            Table.RemoveColumns(#"Changed Type1", {"收窄基点"}, MissingField.Ignore),
            "收窄基点",
            each if [Tighten_BMK] = null then [Tighten_Pt] else [Tighten_BMK],
            type number
        ),
        RemovedCol =
            if Table.HasColumns(#"Changed Type1", "Tighten_BMK") then
                Table.RemoveColumns(#"Inserted TigentenConso", {"Tighten_Pt", "Tighten_BMK"}, MissingField.Ignore)
            else
                #"Changed Type1"
    in
        RemovedCol
