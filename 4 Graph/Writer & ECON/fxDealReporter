(TableName as table, optional _input as text) =>
    let
        Source = TableName,
        NewCols = {"新发总结板块", "多笔", "多笔主体", "描述", "描述2", "总述"} & {"2主体", "3详情", "4品种", "5价格", "6担任"},
        Prep = Table.RemoveColumns(Source, NewCols, MissingField.Ignore),
        //
        Added = fx("AddNIMSector")(Prep),
        Replaced5 = List.Accumulate(
            {"【", "】"}, Added, (x, y) => Table.ReplaceValue(x, y, "", Replacer.ReplaceText, {"新发总结板块"})
        ),
        FnDupeCount = Table.RenameColumns(
            fx("DupeCount")(Added, "信用主体简称"), {"Dupe.Count", "多笔"}, MissingField.UseNull
        ),
        EntityForMulti = Table.AddColumn(
            FnDupeCount, "多笔主体", each if [多笔] > 1 and [通过分行] <> "" then "通过" & [通过分行] else [信用主体简称], type text
        ),
        EntityForBranch = Table.AddColumn(
            EntityForMulti, "分行主体", each if [通过分行] <> "" then "通过" & [通过分行] else "", type text
        ),
        Entity = Table.AddColumn(EntityForBranch, "2主体", each if [多笔] > 1 then [多笔主体] else [信用主体及评级], type text),
        TapOrNewSize = Table.AddColumn(
            Entity, "3详情" & "规模", each if Text.Contains([增发判定], "增发") then [币种规模] else "定价" & [币种规模], type text
        ),
        PerpOrTenor = Table.AddColumn(
            TapOrNewSize,
            "3详情" & "期限",
            each
                if Text.Contains([增发判定], "增发") then
                    ""
                else if Text.Contains([期限], "年(前") then
                    Text.Replace([期限], "年(前", "年期(前")
                else if Text.Contains([期限], "年") and not Text.Contains([期限], "永续") then
                    [期限] & "期"
                else
                    [期限],
            type text
        ),
        TapNew = Table.AddColumn(
            PerpOrTenor, "3详情", each Record.Field(_, "3详情" & "规模") & Record.Field(_, "3详情" & "期限"), type text
        ),
        IssueRtg = Table.AddColumn(
            TapNew, "SquareRtg", each if Text.Length(Text.Select([发行评级], {"A".."Z"})) > 0 then "(" & [发行评级] & ")" else
                ""
        ),
        SBLC = Table.AddColumn(
            IssueRtg, "4品种", each if [备证行] <> "--" then [发行品种] & [SquareRtg] & "，" & [备证行] & "提供备证，" else [发行品种]
                & [SquareRtg]
        ),
        TightenToNumber = Table.TransformColumnTypes(
            Table.ReplaceValue(SBLC, "--", null, Replacer.ReplaceValue, {"收窄基点"}), {{"收窄基点", type number}}
        ),
        Price0 = Table.AddColumn(
            TightenToNumber,
            "5价格" & "票息",
            each if not List.Contains({null, "", "--"}, [定价]) then "价格" & [定价] else "价格" & [票息],
            type text
        ),
        Price1a = Table.AddColumn(
            Price0,
            "5a票息",
            each
                if Text.Contains(Record.Field(_, "5价格" & "票息"), "+") and not Text.Contains([票息], "+") then
                    "，票息" & [票息]
                else
                    "",
            type text
        ),
        Price1 = Table.AddColumn(
            Price1a,
            "5价格" & "收窄",
            each if [收窄基点] = 0 then "较IPG未有收窄" else if [收窄基点] <> null then "较IPG收窄" & Number.ToText([收窄基点]) & "个基点" else
                "",
            type text
        ),
        Price2 = Table.AddColumn(
            Price1,
            "5价格票息收窄",
            each
                if Record.Field(_, "5价格" & "收窄") <> "" then
                    Record.Field(_, "5价格" & "票息") & "，" & Record.Field(_, "5价格" & "收窄")
                else
                    Record.Field(_, "5价格" & "票息"),
            type text
        ),
        Price = Table.AddColumn(
            Price2,
            "5价格",
            each
                if Text.StartsWith([Stats], "建账") then
                    Record.Field(_, "5价格票息收窄") & "，" & [Stats]
                else
                    Record.Field(_, "5价格票息收窄"),
            type text
        ),
        Bocom = Table.AddColumn(
            Price, "6担任", each if not List.Contains({"--", "", null}, [BOCOM担任]) then "，" & [BOCOM担任] else "", type text
        ),
        #"Translated BOCOM" = fx("Replace")(Bocom, {"6担任"}, "角色"),
        AddedStats = Table.AddColumn(
            #"Translated BOCOM",
            "StatsDES",
            each
                if [Stats] <> "" and not Text.StartsWith([Stats], "建账") then
                    "。最终认购统计：" & Text.Replace([Stats], "#(lf)", "")
                else
                    "",
            type text
        ),
        Merged = Table.AddColumn(
            AddedStats,
            "描述",
            each
                Record.Field(_, "DayName.CN")
                    & "，"
                    & Record.Field(_, "2主体")
                    & Record.Field(_, "3详情")
                    & Record.Field(_, "4品种")
                    & Record.Field(_, "5a票息")
                    & "，"
                    & Record.Field(_, "5价格")
                    & Record.Field(_, "StatsDES")
                    & Record.Field(_, "6担任")
        ),
        Merged1 = Table.AddColumn(
            Merged,
            "描述.分行",
            each
                Record.Field(_, "DayName.CN")
                    & Record.Field(_, "分行主体")
                    & Record.Field(_, "3详情")
                    & Record.Field(_, "4品种")
                    & Record.Field(_, "5a票息")
                    & "，"
                    & Record.Field(_, "5价格")
                    & Record.Field(_, "StatsDES")
        ),
        Merged2 = Table.AddColumn(
            Merged1,
            "描述.分行.担任",
            each
                Record.Field(_, "DayName.CN")
                    & Record.Field(_, "分行主体")
                    & Record.Field(_, "3详情")
                    & Record.Field(_, "4品种")
                    & Record.Field(_, "5a票息")
                    & "，"
                    & Record.Field(_, "5价格")
                    & Record.Field(_, "StatsDES")
                    & Record.Field(_, "6担任")
        ),
        //  Stats = Table.AddColumn(Merged, "描述2", each if [Stats] <> "" then [描述] & "#(lf)" & [Stats] else [描述], type text),
        Grouped = Table.Group(
            Merged2,
            {"每周第一天", "信用主体及评级", "板块", "中资属性"},
            {
                {"新发总结板块", each Text.Combine(List.Distinct([新发总结板块]), ";"), type text},
                {"定价日", each List.Max([定价日]), type date},
                {"货币细分", each Text.Combine(List.Distinct([货币细分]), ";"), type text},
                {"增发判定", each Text.Combine(List.Distinct([增发判定]), ""), type text},
                {"DayName.CN", each Text.Combine(List.Distinct([DayName.CN]), ";"), type text},
                {"担任", each Text.Combine(List.RemoveItems(List.Distinct([6担任]), {"", null}), ";"), type text},
                {"多笔", each if List.Count([ISIN]) > 1 then Number.Round(List.Count([ISIN]), 0) else 0, type number},
                {"多担任", each List.Count(List.RemoveItems(List.Distinct([6担任]), {"", null})), type number},
                {
                    "多币种",
                    each
                        if List.Count([ISIN]) > 1 and List.Count(List.Distinct([货币])) > 1 then
                            Number.Round(List.Count(List.Distinct([货币])), 0)
                        else
                            0,
                    type number
                },
                {"描述", each Text.Combine(List.Distinct([描述]), "；"), type text},
                {"描述.分行", each Text.Combine(List.Distinct([描述.分行]), "；"), type text},
                {"描述.分行.担任", each Text.Combine(List.Distinct([描述.分行.担任]), "；"), type text},
                {"Custom", each _, type table}
            }
        ),
        IsByCCY = List.Sum(Grouped[多币种]) = 0,
        #"Replaced Value" = Table.ReplaceValue(
            Grouped,
            each [增发判定],
            each
                if [增发判定] = "增发" then
                    "增发"
                else if Text.Contains([增发判定], "原始") and Text.Contains([增发判定], "增发") or ([多笔] > 1 and Text.Contains([增发判定], "增发")) then
                    "定价及增发"
                else
                    "定价",
            Replacer.ReplaceValue,
            {"增发判定"}
        ),
        MultiTrancheCN = fx(
            "Replace"
        )(
            Table.AddColumn(#"Replaced Value", "多笔中文", each if [多笔] > 1 then Number.ToText([多笔]) else "", type text),
            {"多笔中文"},
            "一二三"
        ),
        #"Added Suffix0" = Table.AddColumn(
            MultiTrancheCN, "周几", each if not Text.Contains([DayName.CN], ";") then [DayName.CN] else "", type text
        ),
        #"Added Suffix" = Table.AddColumn(#"Added Suffix0", "周几描述", each if [周几] <> "" then [周几] & "，" else "", type text),
        #"Added Suffix1" = Table.AddColumn(
            #"Added Suffix",
            "总述担任",
            each if [多笔] > 1 and [多担任] = 1 then Text.Replace([担任] & "，", "担任", "担任所有批次的") else "",
            type text
        ),
        #"Added Suffix2" = Table.AddColumn(
            #"Added Suffix1",
            "总述详情",
            each if [多笔] > 1 then [信用主体及评级] & [增发判定] & Text.Replace([多笔中文], "二", "双") & "批次离岸债券" else [信用主体及评级],
            type text
        ),
        #"Added Suffix3" = Table.AddColumn(#"Added Suffix2", "总述连接", each if [多笔] > 1 then "，其中：" else "", type text),
        replaced1 = Table.ReplaceValue(#"Added Suffix3", each [周几], "", Replacer.ReplaceText, {"描述.分行", "描述.分行.担任"}),
        replaced2 = Table.ReplaceValue(
            replaced1,
            each [增发判定],
            each if ([多笔] > 1 and not Text.Contains([描述.分行], "分行")) and [周几] <> "" then "" else [增发判定],
            Replacer.ReplaceText,
            {"描述.分行", "描述.分行.担任"}
        ),
        #"Merged Columns" = Table.AddColumn(
            replaced2,
            "Writer",
            each
                if [多笔] > 1 and [多担任] < 2 then
                    [周几描述] & [总述详情] & [总述担任] & [总述连接] & [描述.分行]
                else
                    [周几描述] & [总述详情] & [总述连接] & [描述.分行.担任],
            type text
        ),
        Replaced = Table.ReplaceValue(#"Merged Columns", "，，", "，", Replacer.ReplaceText, {"Writer"}),
        List = {"新发总结板块", "信用主体及评级", "定价日", "中资属性", "板块", "货币细分", "Writer"},
        SCol = Table.SelectColumns(Replaced, if _input = null then List else List & {"Custom"}, MissingField.UseNull)
    in
        SCol
