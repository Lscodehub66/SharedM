(TableName as table, optional _input as text) =>
    let
        // TableName = Filtered, Col1 = "1周", Col2 = "2主体", Col3="3详情",  Col4 = "4品种", Col5="5价格", Col6="6担任",
        Source = TableName,
        Col1 = "1周",
        Col2 = "2主体",
        Col3 = "3详情",
        Col4 = "4品种",
        Col5 = "5价格",
        Col6 = "6担任",
        NewCols = {"新发总结板块", "多笔", "信用主体及评级", "多笔主体", "描述", "描述2", "总述"} & {Col1, Col2, Col3, Col4, Col5, Col6},
        Prep = Table.RemoveColumns(Source, NewCols, MissingField.Ignore),
        //
        Added = Table.AddColumn(
            Prep,
            "新发总结板块",
            each
                if [投标资历分类] = "SOE Creds" then
                    "城投板块"
                else if [主体评级分类] = "IG" then
                    "投资级板块"
                else if [板块] = "金融机构" or Text.Contains([中资属性], "央企") then
                    "【投资级板块】"
                else if ([中资属性] = "民企" and [板块] = "房地产") or [主体评级分类] = "HY" then
                    "高收益板块"
                else if [板块] = "主权/政府" then
                    "其他板块"
                else
                    "【其他板块】",
            type text
        ),
        ddd = Table.AddColumn(Added, Col1, each Text.Replace([DayName.CN], "星期", "周"), type text),
        FnDupeCount = Table.RenameColumns(fx("DupeCount")(ddd, "信用主体简称"), {"Dupe.Count", "多笔"}, MissingField.UseNull),
        EntityWRtg = Table.AddColumn(
            FnDupeCount,
            "信用主体及评级",
            each if Text.Length(Text.Select([主体评级], {"A".."Z"})) > 0 then [信用主体简称] & "（" & [主体评级] & "）" else [信用主体简称],
            type text
        ),
        EntityForMulti = Table.AddColumn(
            EntityWRtg, "多笔主体", each if [多笔] > 1 and [通过分行] <> "" then "通过" & [通过分行] else [信用主体简称], type text
        ),
        Entity = Table.AddColumn(EntityForMulti, Col2, each if [多笔] > 1 then [多笔主体] else [信用主体及评级], type text),
        TapOrNewSize = Table.AddColumn(
            Entity, Col3 & "规模", each if Text.Contains([增发判定], "增发") then [币种规模] else "定价" & [币种规模], type text
        ),
        PerpOrTenor = Table.AddColumn(
            TapOrNewSize,
            Col3 & "期限",
            each
                if Text.Contains([增发判定], "增发") then
                    ""
                else if Text.Contains([期限], "年") and not Text.Contains([期限], "永续") then
                    [期限] & "期"
                else
                    [期限],
            type text
        ),
        TapNew = Table.AddColumn(
            PerpOrTenor, Col3, each Record.Field(_, Col3 & "规模") & Record.Field(_, Col3 & "期限"), type text
        ),
        IssueRtg = Table.AddColumn(
            TapNew, "SquareRtg", each if Text.Length(Text.Select([发行评级], {"A".."Z"})) > 0 then "（" & [发行评级] & "）" else
                ""
        ),
        SBLC = Table.AddColumn(
            IssueRtg, Col4, each if [备证行] <> "--" then [发行品种] & [SquareRtg] & "，" & [备证行] & "提供备证，" else [发行品种]
                & [SquareRtg]
        ),
        TightenToNumber = Table.TransformColumnTypes(
            Table.ReplaceValue(SBLC, "--", null, Replacer.ReplaceValue, {"收窄基点"}), {{"收窄基点", type number}}
        ),
        Price0 = Table.AddColumn(
            TightenToNumber, Col5 & "票息", each
                if not List.Contains({null, "", "--"}, [定价]) then
                    "价格" & [定价]
                else
                    "价格" & [票息]
        ),
        Price1 = Table.AddColumn(
            Price0,
            Col5 & "收窄",
            each if [收窄基点] = 0 then "较IPG未有收窄" else if [收窄基点] <> null then "较IPG收窄" & Number.ToText([收窄基点]) & "个基点" else
                "",
            type text
        ),
        Price = Table.AddColumn(
            Price1,
            Col5,
            each
                if Record.Field(_, Col5 & "收窄") <> "" then
                    Record.Field(_, Col5 & "票息") & "， " & Record.Field(_, Col5 & "收窄")
                else
                    Record.Field(_, Col5 & "票息"),
            type text
        ),
        Bocom = Table.AddColumn(
            Price,
            Col6,
            each
                if [是否合名] <> "--" then
                    "，交通银行担任" & [港分_ROLE]
                else if
                    Text.Contains([BISL_ROLE], "GC")
                    or Text.Contains([IS_LEAD], "Sole")
                    and not Text.Contains([港分_ROLE], "GC")
                    and not Text.Contains([澳分_ROLE], "GC")
                then
                    "，交银国际担任" & [角色]
                else if [BISL_ROLE] <> "--" and [港分_ROLE] = "--" and [澳分_ROLE] = "--" then
                    "，交银国际担任" & [角色]
                else if [澳分_ROLE] = "JGC" or [港分_ROLE] = "JGC" then
                    "，交通银行担任全球协调人"
                else if [澳分_ROLE] = "JBR" or [港分_ROLE] = "JBR" then
                    "，交通银行担任账簿管理人"
                else
                    ""
        ),
        #"Translated BOCOM" = fx("Replace")(Bocom, {Col6}, "角色"),
        AddedStats = Table.AddColumn(
            #"Translated BOCOM",
            "StatsDES",
            each if [Stats] <> "" then "。最终认购统计如下：" & Text.Replace([Stats], "#(lf)", "") else "",
            type text
        ),
        Merged = Table.AddColumn(
            AddedStats,
            "描述",
            each
                fx(
                    "PowerTrim"
                )(
                    Record.Field(_, Col1)
                        & "，"
                        & Record.Field(_, Col2)
                        & Record.Field(_, Col3)
                        & Record.Field(_, Col4)
                        & "，"
                        & Record.Field(_, Col5)
                        & Record.Field(_, Col6)
                        & Record.Field(_, "StatsDES"),
                    "，"
                )
        ),
        //  Stats = Table.AddColumn(Merged, "描述2", each if [Stats] <> "" then [描述] & "#(lf)" & [Stats] else [描述], type text),
        Grouped = Table.Group(
            Merged,
            {"信用主体及评级", "板块"},
            {
                {"新发总结板块", each Text.Combine(List.Distinct([新发总结板块]), ";"), type text},
                {"定价日", each List.Max([定价日]), type date},
                {"货币细分", each Text.Combine(List.Distinct([货币细分]), ";"), type text},
                {"增发判定", each Text.Combine(List.Distinct([增发判定]), ""), type text},
                {"多笔", each if List.Count([ISIN]) > 1 then Number.Round(List.Count([ISIN]), 0) else 0, type number},
                {
                    "多币种",
                    each
                        if List.Count([ISIN]) > 1 and List.Count(List.Distinct([货币])) > 1 then
                            Number.Round(List.Count(List.Distinct([货币])), 0)
                        else
                            0,
                    type number
                },
                {"描述", each Text.Combine(List.Distinct([描述]), "#(lf)"), type text},
                {"Custom", each _, type table}
            }
        ),
        IsByCCY = List.Sum(Grouped[多币种]) = 0,
        #"Replaced Value" = Table.ReplaceValue(
            Grouped,
            each [增发判定],
            each
                if
                    Text.Contains([增发判定], "原始")
                    and Text.Contains([增发判定], "增发")
                    or ([多笔] > 1 and Text.Contains([增发判定], "增发"))
                then
                    "定价及增发"
                else if Text.Contains([增发判定], "增发") then
                    "增发"
                else
                    "定价",
            Replacer.ReplaceValue,
            {"增发判定"}
        ),
        MultiTrancheCN = fx(
            "Replace"
        )(
            Table.AddColumn(#"Replaced Value", "多笔中文", each if [多笔] > 1 then Number.ToText([多笔]) else "", type text),
            {"多笔中文"},
            "一二三"
        ),
        #"Added Suffix" = Table.AddColumn(
            MultiTrancheCN,
            "总述",
            each if [多笔] > 1 then [信用主体及评级] & [增发判定] & Text.Replace([多笔中文], "二", "双") & "批次离岸债券：" else "",
            type text
        ),
        AddedCol = Table.AddColumn(#"Added Suffix", "Writer", each if [总述] <> "" then [总述] & "#(lf)" & [描述] else [描述]),
        List = {"新发总结板块", "信用主体及评级", "定价日", "板块", "货币细分", "Writer"},
        SCol = Table.SelectColumns(AddedCol, if _input = null then List else List & {"Custom"}, MissingField.UseNull)
    in
        SCol
