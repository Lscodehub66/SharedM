// let LoadCode = Load("PPT_Launcher","Code"), EVA = Expression.Evaluate(LoadCode, #shared) in EVA
let
    Source = CWB("Indice_Table"),
    #"Grouped Rows" = Table.Group(
        Table.SelectRows(Source, each [Index_Writer] <> null),
        {"Index_Writer", "ObjectName"},
        {{"Description", each "上周，" & Text.Combine(List.Distinct([CN_描述]), "，"), type text}}
    ),
    Sorted = Table.Sort(#"Grouped Rows", {{"Index_Writer", Order.Ascending}}),
    Custom1 = Table.TransformColumns(
        Sorted, {{"Description", each Text.Replace(Text.Replace(_, "上周，3个月", "年期方面，3个月"), "美国国债利率", ""), type text}}
    ),
    #"Removed Columns" = Table.RemoveColumns(Custom1, {"Index_Writer"}),
    #">NewsDES" =
        let
            Source = fx("Ws")("DYNAMIC", "wNews_Input"),
            TF = Table.TransformColumns(
                Source,
                {
                    {
                        "新闻",
                        each
                            if Text.EndsWith(_, "。") then
                                Text.BeforeDelimiter(_, "。", {0, RelativePosition.FromEnd})
                            else
                                _,
                        type text
                    }
                }
            ),
            NewsList = List.Buffer(List.RemoveItems(TF[新闻], {"", null})),
            Combined = Text.Combine(NewsList, "#(lf)")
        in
            Combined,
    Inserted0 = Table.InsertRows(#"Removed Columns", 0, {[ObjectName = "newsbox", Description = #">NewsDES"]}),
    _syntaxTBC = "【Syndicate】",
    Inserted = Table.InsertRows(
        Inserted0,
        5,
        {
            [
                ObjectName = "ustbox",
                Description = "自2022年3月启动加息以来，美联储共加息11次，在7月加息25bps后，9月、11月、12月及2024年1月连续4次暂停加息，当前基准利率为5.25-5.50%区间"
            ],
            [
                ObjectName = "ustcgbspdbox",
                Description = "中美利差自2022年3月起持续深度倒挂，11月开始倒挂幅度明显缓和"
            ],
            [
                ObjectName = "ustcgbspdbox",
                Description = Load("Spd_TrendPQ")[描述]{0}
            ],
            [
                ObjectName = "yearlynimbox",
                Description = Load("Write_YearlyNIM")
            ],
            [
                ObjectName = "ipgtighteningbox",
                Description = Load("AvgTighten_Writer")[描述]{0}
            ],
            [
                ObjectName = "ipgtighteningbox",
                Description = fx("Write_MaxTighten")(CWB("USDCNH_Tighten_Pivot3M"), "近3月")[描述]{0}
            ],
            [
                ObjectName = "nimsummarybox",
                Description = Load("wNIMSum_Writer")[描述]{0} & "。"
            ],
            [
                ObjectName = "coverdatebox",
                Description = Date.ToText(fx("ControlWB.Due.Date"), "更新至：yyyy年M月d日")
            ],
            [
                ObjectName = "commentaryhdbox",
                Description = Date.ToText(fx("Control.PreviousMon.Date"), "每周市场评论（yyyy年M月d日")
                    & Date.ToText(fx("Control.当前"), " - yyyy年M月d日）")
            ],
            [
                ObjectName = "syndboxmarketcolorsum",
                Description = _syntaxTBC
            ],
            [
                ObjectName = "syndboxmarketcolorig",
                Description = _syntaxTBC
            ],
            [
                ObjectName = "syndboxmarketcolorlgfv",
                Description = _syntaxTBC
            ],
            [
                ObjectName = "syndboxmarketcolorhy",
                Description = _syntaxTBC
            ],
            [
                ObjectName = "syndboxustcurve",
                Description = _syntaxTBC
            ],
            [
                ObjectName = "syndboxpipeline",
                Description = _syntaxTBC
            ]
        }
    ),
    Mergedsynd = fx("Merge")(Inserted, CWB("tbl_syndinput", "1"), "ObjectName", "ObjectName", {"Input"}, {"Input"}),
    Replaced = Table.ReplaceValue(
        Mergedsynd,
        each [Description],
        each if not List.Contains({null, ""}, [Input]) then [Input] else [Description],
        Replacer.ReplaceValue,
        {"Description"}
    ),
    #"Grouped Rows1" = Table.Group(
        Replaced,
        {"ObjectName"},
        {{"Description", each Text.Combine(List.Distinct([Description]), "#(lf)"), type text}}
    ),
    #"Appended Query" = fx(
        "Combine"
    )(
        {#"Grouped Rows1", Load("wSummaryReporter"), Load("wTrancheReporter")}, {null}, {0}
    ),
    objlist = List.Buffer(#"Appended Query"[ObjectName]),
    Inserted2 = List.Accumulate(
        {{"nimigsumbox", "上周，投资级板块无新发。"}, {"nimlgfvsumbox", "上周，城投板块无新发。"}, {"nimigbox", "n/a"}, {"nimlgfvbox", "n/a"}},
        #"Appended Query",
        (x, y) =>
            if not List.Contains(objlist, y{0}) then
                Table.InsertRows(x, 0, {[ObjectName = y{0}, Description = y{1}]})
            else
                x
    ),
    Merged = fx("Merge")(Inserted2, CWB("PPT_Launcher"), "ObjectName", "ObjectName", {"PPTSlide"}, {"PPTSlide"}),
    AddedCode = fx("PPTCode_Writer")(Merged),
    SCol = Table.SelectColumns(AddedCode, {"PPTSlide", "ObjectName", "Description", "VBACode"}),
    #"Sorted Rows" = Table.Sort(SCol, {{"PPTSlide", Order.Ascending}, {"ObjectName", Order.Ascending}})
in
    #"Sorted Rows"
