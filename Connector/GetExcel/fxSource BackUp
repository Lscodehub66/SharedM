(Input as nullable text) =>
    let
        
        Input_ExcelKey = Text.Remove(Text.BeforeDelimiter(Text.Upper(Input??""), "_"),{" "}),
        Input_SheetKey = Text.Replace(Text.AfterDelimiter(Text.Upper(Input??""), "_"), "=", ""),
        IsEqual = if Text.Contains( (Input??"") , "=") then true else false,
        DimSource = Load("DimSource"),
               S_Excel = Table.SelectRows(   DimSource , each [Excel_Key] = Input_ExcelKey),
        S_Sheet = Table.SelectRows(
            S_Excel,
            each
                if Input_SheetKey = "" then
                  [PK_Sheet] = "" or  Text.StartsWith([PK_Sheet], "*")
                else
                    Text.Contains([PK_Sheet], Input_SheetKey) or Text.Contains(Input_SheetKey, [PK_Sheet])
        ),
    Crossroad = if (Input??"") = "" then DimSource else if Input_ExcelKey = "DEALSMASTER" then Table.FirstN(S_Sheet, 2) else  Table.FirstN(S_Sheet, 1),
    Joined_FilesContent = Table.Join(Crossroad,{"FolderInput","PK_Excel"},Load("DimSource_Content"),{"Folder Path","PK_Excel2"}),
    #"Removed Columns" = Table.RemoveColumns(Joined_FilesContent,{"Index", "FolderInput", "PK_Excel", "PK_Excel2", "Folder Path"},MissingField.Ignore),
        FnExcel = Table.AddColumn(#"Removed Columns", "ExcelWB", each fx("ExcelWB")([Content])),
        #"Sheet Selected" = Table.AddColumn(
            FnExcel,
            "Sheet",
            each
                if Text.StartsWith([PK_Sheet], "*") then
                    Table.FirstN([ExcelWB], 1)
                else
                    Table.SelectRows(
                        [ExcelWB],
                        (Magic) =>
                            if IsEqual = true then
                                Text.Upper(Magic[Item]) = Input_SheetKey
                            else if Input_SheetKey <> "" then
                                Text.Contains(Magic[Item], Input_SheetKey, Comparer.OrdinalIgnoreCase)
                            else
                                Text.Contains(Magic[Item], [PK_Sheet], Comparer.OrdinalIgnoreCase)
                    )
        ),
        FnSheet = Table.AddColumn(
            #"Sheet Selected",
            "Table",
            each
                if [fxSheet_Input] <> null then
                    fx("SheetTotbl")([Sheet][Data]{0}, [fxSheet_Input])
                else if [PK_Sheet] <> "" or Input_SheetKey <> "" then
                    Table.FirstN([Sheet], 1){0}[Data]
                else
                    [Sheet]
        ),
        //***
        #"ErrorRows Removed" =
            if Text.Contains(FnSheet[File Path]{0}, "C:\Users\ktkt2\OneDrive\EXE Team\DataHub\DEALs MASTER") then
                Table.RemoveRowsWithErrors(FnSheet, {"Table"})
            else
                FnSheet,
        CN_ColumnToExpand = Table.ColumnNames(#"ErrorRows Removed"[Table]{0}),
        #"Table Column Expanded" =
            if Input = "" or Input = null then
                Table.RemoveColumns(#"ErrorRows Removed", {"Sheet", "ExcelWB"}, MissingField.Ignore)
            else if List.ContainsAll(CN_ColumnToExpand, {"Item", "Data"}) then
                
                    fx("Data")
                (
                    Table.ExpandTableColumn(
                        Table.SelectColumns(#"ErrorRows Removed", {"Table", "File Path"}), "Table", CN_ColumnToExpand
                    )
                )
            else
                  fx("Data")(#"ErrorRows Removed"{0}[Table])
    in
        #"Table Column Expanded"